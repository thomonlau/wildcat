circuit WildcatTop :
  module Csr :
    input clock : Clock
    input reset : Reset
    output io : { flip address : UInt<12>, data : UInt<32>}

    wire data : UInt<32> @[Csr.scala 19:25]
    data <= UInt<32>("h0") @[Csr.scala 19:25]
    node _T = eq(UInt<12>("hc00"), io.address) @[Csr.scala 22:22]
    when _T : @[Csr.scala 22:22]
      data <= UInt<1>("h1") @[Csr.scala 24:12]
    else :
      node _T_1 = eq(UInt<12>("hc80"), io.address) @[Csr.scala 22:22]
      when _T_1 : @[Csr.scala 22:22]
        data <= UInt<2>("h2") @[Csr.scala 27:12]
      else :
        node _T_2 = eq(UInt<12>("hc01"), io.address) @[Csr.scala 22:22]
        when _T_2 : @[Csr.scala 22:22]
          data <= UInt<2>("h3") @[Csr.scala 30:12]
        else :
          node _T_3 = eq(UInt<12>("hc81"), io.address) @[Csr.scala 22:22]
          when _T_3 : @[Csr.scala 22:22]
            data <= UInt<3>("h4") @[Csr.scala 33:12]
          else :
            node _T_4 = eq(UInt<12>("hb00"), io.address) @[Csr.scala 22:22]
            when _T_4 : @[Csr.scala 22:22]
              data <= UInt<1>("h0") @[Csr.scala 36:12]
            else :
              node _T_5 = eq(UInt<12>("hb80"), io.address) @[Csr.scala 22:22]
              when _T_5 : @[Csr.scala 22:22]
                data <= UInt<1>("h0") @[Csr.scala 39:12]
              else :
                node _T_6 = eq(UInt<12>("hb01"), io.address) @[Csr.scala 22:22]
                when _T_6 : @[Csr.scala 22:22]
                  data <= UInt<1>("h0") @[Csr.scala 42:12]
                else :
                  node _T_7 = eq(UInt<12>("hb81"), io.address) @[Csr.scala 22:22]
                  when _T_7 : @[Csr.scala 22:22]
                    data <= UInt<1>("h0") @[Csr.scala 45:12]
                  else :
                    node _T_8 = eq(UInt<12>("hf12"), io.address) @[Csr.scala 22:22]
                    when _T_8 : @[Csr.scala 22:22]
                      data <= UInt<6>("h2f") @[Csr.scala 48:12]
    io.data <= data @[Csr.scala 52:11]

  module ThreeCats :
    input clock : Clock
    input reset : Reset
    output io : { imem : { address : UInt<32>, flip data : UInt<32>, flip stall : UInt<1>}, dmem : { rdAddress : UInt<32>, flip rdData : UInt<32>, rdEnable : UInt<1>, wrAddress : UInt<32>, wrData : UInt<32>, wrEnable : UInt<1>[4], flip stall : UInt<1>}}

    reg cyclesReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[ThreeCats.scala 22:26]
    node _cyclesReg_T = add(cyclesReg, UInt<1>("h1")) @[ThreeCats.scala 23:26]
    node _cyclesReg_T_1 = tail(_cyclesReg_T, 1) @[ThreeCats.scala 23:26]
    cyclesReg <= _cyclesReg_T_1 @[ThreeCats.scala 23:13]
    wire stall : UInt<1> @[ThreeCats.scala 26:26]
    stall <= UInt<1>("h0") @[ThreeCats.scala 26:26]
    wire wbData : UInt<32> @[ThreeCats.scala 27:20]
    wire wbDest : UInt<5> @[ThreeCats.scala 28:20]
    wire wrEna : UInt<1> @[ThreeCats.scala 29:26]
    wrEna <= UInt<1>("h1") @[ThreeCats.scala 29:26]
    wire doBranch : UInt<1> @[ThreeCats.scala 31:29]
    doBranch <= UInt<1>("h0") @[ThreeCats.scala 31:29]
    wire branchTarget : UInt @[ThreeCats.scala 32:33]
    branchTarget <= UInt<1>("h0") @[ThreeCats.scala 32:33]
    wire _exFwdReg_WIRE : { valid : UInt<1>, wbDest : UInt<5>, wbData : UInt<32>} @[ThreeCats.scala 40:38]
    _exFwdReg_WIRE.wbData <= UInt<32>("h0") @[ThreeCats.scala 40:38]
    _exFwdReg_WIRE.wbDest <= UInt<5>("h0") @[ThreeCats.scala 40:38]
    _exFwdReg_WIRE.valid <= UInt<1>("h0") @[ThreeCats.scala 40:38]
    reg exFwdReg : { valid : UInt<1>, wbDest : UInt<5>, wbData : UInt<32>}, clock with :
      reset => (reset, _exFwdReg_WIRE) @[ThreeCats.scala 40:25]
    node _pcReg_T = asUInt(asSInt(UInt<32>("hfffffffc"))) @[ThreeCats.scala 45:44]
    node _pcReg_T_1 = add(UInt<1>("h0"), _pcReg_T) @[ThreeCats.scala 45:29]
    node _pcReg_T_2 = tail(_pcReg_T_1, 1) @[ThreeCats.scala 45:29]
    reg pcReg : UInt, clock with :
      reset => (reset, _pcReg_T_2) @[ThreeCats.scala 45:22]
    node _pcNext_T = add(pcReg, UInt<3>("h4")) @[ThreeCats.scala 46:62]
    node _pcNext_T_1 = tail(_pcNext_T, 1) @[ThreeCats.scala 46:62]
    node _pcNext_T_2 = mux(doBranch, branchTarget, _pcNext_T_1) @[ThreeCats.scala 46:31]
    wire pcNext : UInt @[ThreeCats.scala 46:27]
    pcNext <= _pcNext_T_2 @[ThreeCats.scala 46:27]
    reg firstIter : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[ThreeCats.scala 47:26]
    pcReg <= pcNext @[ThreeCats.scala 48:9]
    io.imem.address <= pcNext @[ThreeCats.scala 49:19]
    wire instr : UInt @[ThreeCats.scala 52:26]
    instr <= io.imem.data @[ThreeCats.scala 52:26]
    when firstIter : @[ThreeCats.scala 53:19]
      instr <= UInt<5>("h13") @[ThreeCats.scala 54:11]
    when io.imem.stall : @[ThreeCats.scala 56:24]
      instr <= UInt<5>("h13") @[ThreeCats.scala 57:11]
      pcNext <= pcReg @[ThreeCats.scala 58:12]
    reg pcRegReg : UInt, clock with :
      reset => (UInt<1>("h0"), pcRegReg) @[ThreeCats.scala 62:25]
    pcRegReg <= pcReg @[ThreeCats.scala 62:25]
    reg instrReg : UInt, clock with :
      reset => (reset, UInt<5>("h13")) @[ThreeCats.scala 63:25]
    node _instrReg_T = mux(doBranch, UInt<5>("h13"), instr) @[ThreeCats.scala 64:18]
    instrReg <= _instrReg_T @[ThreeCats.scala 64:12]
    node rs1 = bits(instr, 19, 15) @[ThreeCats.scala 65:18]
    node rs2 = bits(instr, 24, 20) @[ThreeCats.scala 66:18]
    node rd = bits(instr, 11, 7) @[ThreeCats.scala 67:17]
    smem regs : UInt<32> [32] @[Functions.scala 194:29]
    wire _debugRegs_WIRE : UInt<32>[32] @[Functions.scala 195:38]
    _debugRegs_WIRE[0] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[1] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[2] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[3] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[4] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[5] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[6] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[7] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[8] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[9] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[10] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[11] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[12] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[13] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[14] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[15] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[16] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[17] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[18] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[19] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[20] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[21] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[22] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[23] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[24] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[25] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[26] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[27] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[28] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[29] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[30] <= UInt<32>("h0") @[Functions.scala 195:38]
    _debugRegs_WIRE[31] <= UInt<32>("h0") @[Functions.scala 195:38]
    reg debugRegs : UInt<32>[32], clock with :
      reset => (reset, _debugRegs_WIRE) @[Functions.scala 195:30]
    reg rs1Val_REG : UInt, clock with :
      reset => (UInt<1>("h0"), rs1Val_REG) @[Functions.scala 196:31]
    rs1Val_REG <= rs1 @[Functions.scala 196:31]
    node _rs1Val_T = eq(rs1Val_REG, UInt<1>("h0")) @[Functions.scala 196:37]
    wire _rs1Val_WIRE : UInt @[Functions.scala 196:60]
    _rs1Val_WIRE is invalid @[Functions.scala 196:60]
    when UInt<1>("h1") : @[Functions.scala 196:60]
      _rs1Val_WIRE <= rs1 @[Functions.scala 196:60]
      node _rs1Val_T_1 = or(_rs1Val_WIRE, UInt<5>("h0")) @[Functions.scala 196:60]
      node _rs1Val_T_2 = bits(_rs1Val_T_1, 4, 0) @[Functions.scala 196:60]
      read mport rs1Val_MPORT = regs[_rs1Val_T_2], clock @[Functions.scala 196:60]
    node rs1Val = mux(_rs1Val_T, UInt<1>("h0"), rs1Val_MPORT) @[Functions.scala 196:23]
    reg rs2Val_REG : UInt, clock with :
      reset => (UInt<1>("h0"), rs2Val_REG) @[Functions.scala 197:31]
    rs2Val_REG <= rs2 @[Functions.scala 197:31]
    node _rs2Val_T = eq(rs2Val_REG, UInt<1>("h0")) @[Functions.scala 197:37]
    wire _rs2Val_WIRE : UInt @[Functions.scala 197:60]
    _rs2Val_WIRE is invalid @[Functions.scala 197:60]
    when UInt<1>("h1") : @[Functions.scala 197:60]
      _rs2Val_WIRE <= rs2 @[Functions.scala 197:60]
      node _rs2Val_T_1 = or(_rs2Val_WIRE, UInt<5>("h0")) @[Functions.scala 197:60]
      node _rs2Val_T_2 = bits(_rs2Val_T_1, 4, 0) @[Functions.scala 197:60]
      read mport rs2Val_MPORT = regs[_rs2Val_T_2], clock @[Functions.scala 197:60]
    node rs2Val = mux(_rs2Val_T, UInt<1>("h0"), rs2Val_MPORT) @[Functions.scala 197:23]
    node _T = neq(wbDest, UInt<1>("h0")) @[Functions.scala 198:24]
    node _T_1 = and(wrEna, _T) @[Functions.scala 198:18]
    when _T_1 : @[Functions.scala 198:33]
      write mport MPORT = regs[wbDest], clock
      MPORT <= wbData
      debugRegs[wbDest] <= wbData @[Functions.scala 200:23]
    inst csr of Csr @[ThreeCats.scala 70:19]
    csr.clock <= clock
    csr.reset <= reset
    node _csr_io_address_T = bits(instrReg, 31, 20) @[ThreeCats.scala 71:29]
    csr.io.address <= _csr_io_address_T @[ThreeCats.scala 71:18]
    node decOut_opcode = bits(instrReg, 6, 0) @[Functions.scala 17:29]
    node decOut_func3 = bits(instrReg, 14, 12) @[Functions.scala 18:28]
    wire decOut : { instrType : UInt<3>, aluOp : UInt<4>, imm : SInt<32>, isImm : UInt<1>, isLui : UInt<1>, isAuiPc : UInt<1>, isLoad : UInt<1>, isStore : UInt<1>, isBranch : UInt<1>, isJal : UInt<1>, isJalr : UInt<1>, rfWrite : UInt<1>, isECall : UInt<1>, isCssrw : UInt<1>, rs1Valid : UInt<1>, rs2Valid : UInt<1>} @[Functions.scala 19:22]
    decOut.instrType <= UInt<1>("h0") @[Functions.scala 20:22]
    decOut.isImm <= UInt<1>("h0") @[Functions.scala 21:18]
    decOut.isLui <= UInt<1>("h0") @[Functions.scala 22:18]
    decOut.isAuiPc <= UInt<1>("h0") @[Functions.scala 23:20]
    decOut.isLoad <= UInt<1>("h0") @[Functions.scala 24:19]
    decOut.isStore <= UInt<1>("h0") @[Functions.scala 25:20]
    decOut.isBranch <= UInt<1>("h0") @[Functions.scala 26:21]
    decOut.isJal <= UInt<1>("h0") @[Functions.scala 27:18]
    decOut.isJalr <= UInt<1>("h0") @[Functions.scala 28:19]
    decOut.rfWrite <= UInt<1>("h0") @[Functions.scala 29:20]
    decOut.isECall <= UInt<1>("h0") @[Functions.scala 30:20]
    decOut.isCssrw <= UInt<1>("h0") @[Functions.scala 31:20]
    decOut.rs1Valid <= UInt<1>("h0") @[Functions.scala 32:21]
    decOut.rs2Valid <= UInt<1>("h0") @[Functions.scala 33:21]
    node _decOut_T = eq(UInt<5>("h13"), decOut_opcode) @[Functions.scala 34:20]
    when _decOut_T : @[Functions.scala 34:20]
      decOut.instrType <= UInt<1>("h1") @[Functions.scala 36:26]
      decOut.isImm <= UInt<1>("h1") @[Functions.scala 37:22]
      decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 38:24]
      decOut.rs1Valid <= UInt<1>("h1") @[Functions.scala 39:25]
    else :
      node _decOut_T_1 = eq(UInt<6>("h33"), decOut_opcode) @[Functions.scala 34:20]
      when _decOut_T_1 : @[Functions.scala 34:20]
        decOut.instrType <= UInt<1>("h0") @[Functions.scala 42:26]
        decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 43:24]
        decOut.rs1Valid <= UInt<1>("h1") @[Functions.scala 44:25]
        decOut.rs2Valid <= UInt<1>("h1") @[Functions.scala 45:25]
      else :
        node _decOut_T_2 = eq(UInt<7>("h63"), decOut_opcode) @[Functions.scala 34:20]
        when _decOut_T_2 : @[Functions.scala 34:20]
          decOut.instrType <= UInt<2>("h3") @[Functions.scala 48:26]
          decOut.isImm <= UInt<1>("h1") @[Functions.scala 49:22]
          decOut.isBranch <= UInt<1>("h1") @[Functions.scala 50:25]
        else :
          node _decOut_T_3 = eq(UInt<2>("h3"), decOut_opcode) @[Functions.scala 34:20]
          when _decOut_T_3 : @[Functions.scala 34:20]
            decOut.instrType <= UInt<1>("h1") @[Functions.scala 53:26]
            decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 54:24]
            decOut.isLoad <= UInt<1>("h1") @[Functions.scala 55:23]
          else :
            node _decOut_T_4 = eq(UInt<6>("h23"), decOut_opcode) @[Functions.scala 34:20]
            when _decOut_T_4 : @[Functions.scala 34:20]
              decOut.instrType <= UInt<2>("h2") @[Functions.scala 58:26]
              decOut.isStore <= UInt<1>("h1") @[Functions.scala 59:24]
            else :
              node _decOut_T_5 = eq(UInt<6>("h37"), decOut_opcode) @[Functions.scala 34:20]
              when _decOut_T_5 : @[Functions.scala 34:20]
                decOut.instrType <= UInt<3>("h4") @[Functions.scala 62:26]
                decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 63:24]
                decOut.isLui <= UInt<1>("h1") @[Functions.scala 64:22]
              else :
                node _decOut_T_6 = eq(UInt<5>("h17"), decOut_opcode) @[Functions.scala 34:20]
                when _decOut_T_6 : @[Functions.scala 34:20]
                  decOut.instrType <= UInt<3>("h4") @[Functions.scala 67:26]
                  decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 68:24]
                  decOut.isAuiPc <= UInt<1>("h1") @[Functions.scala 69:24]
                else :
                  node _decOut_T_7 = eq(UInt<7>("h6f"), decOut_opcode) @[Functions.scala 34:20]
                  when _decOut_T_7 : @[Functions.scala 34:20]
                    decOut.instrType <= UInt<3>("h5") @[Functions.scala 72:26]
                    decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 73:24]
                    decOut.isJal <= UInt<1>("h1") @[Functions.scala 74:22]
                  else :
                    node _decOut_T_8 = eq(UInt<7>("h67"), decOut_opcode) @[Functions.scala 34:20]
                    when _decOut_T_8 : @[Functions.scala 34:20]
                      decOut.instrType <= UInt<1>("h1") @[Functions.scala 77:26]
                      decOut.isImm <= UInt<1>("h1") @[Functions.scala 78:22]
                      decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 79:24]
                      decOut.isJalr <= UInt<1>("h1") @[Functions.scala 80:23]
                    else :
                      node _decOut_T_9 = eq(UInt<7>("h73"), decOut_opcode) @[Functions.scala 34:20]
                      when _decOut_T_9 : @[Functions.scala 34:20]
                        decOut.instrType <= UInt<1>("h1") @[Functions.scala 83:26]
                        node _decOut_T_10 = eq(decOut_func3, UInt<1>("h0")) @[Functions.scala 84:21]
                        when _decOut_T_10 : @[Functions.scala 84:30]
                          decOut.isECall <= UInt<1>("h1") @[Functions.scala 85:26]
                        else :
                          decOut.isCssrw <= UInt<1>("h1") @[Functions.scala 87:26]
                          decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 88:26]
    node decOut_decOut_aluOp_opcode = bits(instrReg, 6, 0) @[Functions.scala 99:29]
    node decOut_decOut_aluOp_func3 = bits(instrReg, 14, 12) @[Functions.scala 100:28]
    node decOut_decOut_aluOp_func7 = bits(instrReg, 31, 25) @[Functions.scala 101:28]
    wire decOut_decOut_aluOp_aluOp : UInt @[Functions.scala 103:28]
    decOut_decOut_aluOp_aluOp <= UInt<1>("h0") @[Functions.scala 103:28]
    node _decOut_decOut_aluOp_T = eq(UInt<1>("h0"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
    when _decOut_decOut_aluOp_T : @[Functions.scala 104:19]
      decOut_decOut_aluOp_aluOp <= UInt<1>("h0") @[Functions.scala 106:15]
      node _decOut_decOut_aluOp_T_1 = neq(decOut_decOut_aluOp_opcode, UInt<5>("h13")) @[Functions.scala 107:21]
      node _decOut_decOut_aluOp_T_2 = neq(decOut_decOut_aluOp_opcode, UInt<7>("h67")) @[Functions.scala 107:44]
      node _decOut_decOut_aluOp_T_3 = and(_decOut_decOut_aluOp_T_1, _decOut_decOut_aluOp_T_2) @[Functions.scala 107:34]
      node _decOut_decOut_aluOp_T_4 = neq(decOut_decOut_aluOp_func7, UInt<1>("h0")) @[Functions.scala 107:64]
      node _decOut_decOut_aluOp_T_5 = and(_decOut_decOut_aluOp_T_3, _decOut_decOut_aluOp_T_4) @[Functions.scala 107:55]
      when _decOut_decOut_aluOp_T_5 : @[Functions.scala 107:73]
        decOut_decOut_aluOp_aluOp <= UInt<1>("h1") @[Functions.scala 108:17]
    else :
      node _decOut_decOut_aluOp_T_6 = eq(UInt<1>("h1"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
      when _decOut_decOut_aluOp_T_6 : @[Functions.scala 104:19]
        decOut_decOut_aluOp_aluOp <= UInt<2>("h2") @[Functions.scala 112:15]
      else :
        node _decOut_decOut_aluOp_T_7 = eq(UInt<2>("h2"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
        when _decOut_decOut_aluOp_T_7 : @[Functions.scala 104:19]
          decOut_decOut_aluOp_aluOp <= UInt<2>("h3") @[Functions.scala 115:15]
        else :
          node _decOut_decOut_aluOp_T_8 = eq(UInt<2>("h3"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
          when _decOut_decOut_aluOp_T_8 : @[Functions.scala 104:19]
            decOut_decOut_aluOp_aluOp <= UInt<3>("h4") @[Functions.scala 118:15]
          else :
            node _decOut_decOut_aluOp_T_9 = eq(UInt<3>("h4"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
            when _decOut_decOut_aluOp_T_9 : @[Functions.scala 104:19]
              decOut_decOut_aluOp_aluOp <= UInt<3>("h5") @[Functions.scala 121:15]
            else :
              node _decOut_decOut_aluOp_T_10 = eq(UInt<3>("h5"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
              when _decOut_decOut_aluOp_T_10 : @[Functions.scala 104:19]
                node _decOut_decOut_aluOp_T_11 = eq(decOut_decOut_aluOp_func7, UInt<1>("h0")) @[Functions.scala 124:20]
                when _decOut_decOut_aluOp_T_11 : @[Functions.scala 124:29]
                  decOut_decOut_aluOp_aluOp <= UInt<3>("h6") @[Functions.scala 125:17]
                else :
                  decOut_decOut_aluOp_aluOp <= UInt<3>("h7") @[Functions.scala 127:17]
              else :
                node _decOut_decOut_aluOp_T_12 = eq(UInt<3>("h6"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
                when _decOut_decOut_aluOp_T_12 : @[Functions.scala 104:19]
                  decOut_decOut_aluOp_aluOp <= UInt<4>("h8") @[Functions.scala 131:15]
                else :
                  node _decOut_decOut_aluOp_T_13 = eq(UInt<3>("h7"), decOut_decOut_aluOp_func3) @[Functions.scala 104:19]
                  when _decOut_decOut_aluOp_T_13 : @[Functions.scala 104:19]
                    decOut_decOut_aluOp_aluOp <= UInt<4>("h9") @[Functions.scala 134:15]
    decOut.aluOp <= decOut_decOut_aluOp_aluOp @[Functions.scala 92:18]
    wire decOut_decOut_imm_imm : SInt<32> @[Functions.scala 168:19]
    node _decOut_decOut_imm_imm_T = bits(instrReg, 31, 20) @[Functions.scala 169:23]
    node _decOut_decOut_imm_imm_T_1 = asSInt(_decOut_decOut_imm_imm_T) @[Functions.scala 169:32]
    decOut_decOut_imm_imm <= _decOut_decOut_imm_imm_T_1 @[Functions.scala 169:9]
    node _decOut_decOut_imm_T = eq(UInt<1>("h1"), decOut.instrType) @[Functions.scala 170:23]
    when _decOut_decOut_imm_T : @[Functions.scala 170:23]
      node _decOut_decOut_imm_imm_T_2 = bits(instrReg, 31, 31) @[Functions.scala 172:37]
      node _decOut_decOut_imm_imm_T_3 = bits(_decOut_decOut_imm_imm_T_2, 0, 0) @[Bitwise.scala 77:15]
      node _decOut_decOut_imm_imm_T_4 = mux(_decOut_decOut_imm_imm_T_3, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 77:12]
      node _decOut_decOut_imm_imm_T_5 = bits(instrReg, 31, 20) @[Functions.scala 172:57]
      node _decOut_decOut_imm_imm_T_6 = cat(_decOut_decOut_imm_imm_T_4, _decOut_decOut_imm_imm_T_5) @[Functions.scala 172:43]
      node _decOut_decOut_imm_imm_T_7 = asSInt(_decOut_decOut_imm_imm_T_6) @[Functions.scala 172:67]
      decOut_decOut_imm_imm <= _decOut_decOut_imm_imm_T_7 @[Functions.scala 172:13]
    else :
      node _decOut_decOut_imm_T_1 = eq(UInt<2>("h2"), decOut.instrType) @[Functions.scala 170:23]
      when _decOut_decOut_imm_T_1 : @[Functions.scala 170:23]
        node _decOut_decOut_imm_imm_T_8 = bits(instrReg, 31, 31) @[Functions.scala 175:37]
        node _decOut_decOut_imm_imm_T_9 = bits(_decOut_decOut_imm_imm_T_8, 0, 0) @[Bitwise.scala 77:15]
        node _decOut_decOut_imm_imm_T_10 = mux(_decOut_decOut_imm_imm_T_9, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 77:12]
        node _decOut_decOut_imm_imm_T_11 = bits(instrReg, 31, 25) @[Functions.scala 175:57]
        node _decOut_decOut_imm_imm_T_12 = cat(_decOut_decOut_imm_imm_T_10, _decOut_decOut_imm_imm_T_11) @[Functions.scala 175:43]
        node _decOut_decOut_imm_imm_T_13 = bits(instrReg, 11, 7) @[Functions.scala 175:80]
        node _decOut_decOut_imm_imm_T_14 = cat(_decOut_decOut_imm_imm_T_12, _decOut_decOut_imm_imm_T_13) @[Functions.scala 175:66]
        node _decOut_decOut_imm_imm_T_15 = asSInt(_decOut_decOut_imm_imm_T_14) @[Functions.scala 175:89]
        decOut_decOut_imm_imm <= _decOut_decOut_imm_imm_T_15 @[Functions.scala 175:13]
      else :
        node _decOut_decOut_imm_T_2 = eq(UInt<2>("h3"), decOut.instrType) @[Functions.scala 170:23]
        when _decOut_decOut_imm_T_2 : @[Functions.scala 170:23]
          node _decOut_decOut_imm_imm_T_16 = bits(instrReg, 31, 31) @[Functions.scala 178:37]
          node _decOut_decOut_imm_imm_T_17 = bits(_decOut_decOut_imm_imm_T_16, 0, 0) @[Bitwise.scala 77:15]
          node _decOut_decOut_imm_imm_T_18 = mux(_decOut_decOut_imm_imm_T_17, UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 77:12]
          node _decOut_decOut_imm_imm_T_19 = bits(instrReg, 7, 7) @[Functions.scala 178:57]
          node _decOut_decOut_imm_imm_T_20 = cat(_decOut_decOut_imm_imm_T_18, _decOut_decOut_imm_imm_T_19) @[Functions.scala 178:43]
          node _decOut_decOut_imm_imm_T_21 = bits(instrReg, 30, 25) @[Functions.scala 178:75]
          node _decOut_decOut_imm_imm_T_22 = cat(_decOut_decOut_imm_imm_T_20, _decOut_decOut_imm_imm_T_21) @[Functions.scala 178:61]
          node _decOut_decOut_imm_imm_T_23 = bits(instrReg, 11, 8) @[Functions.scala 178:98]
          node _decOut_decOut_imm_imm_T_24 = cat(_decOut_decOut_imm_imm_T_22, _decOut_decOut_imm_imm_T_23) @[Functions.scala 178:84]
          node _decOut_decOut_imm_imm_T_25 = cat(_decOut_decOut_imm_imm_T_24, UInt<1>("h0")) @[Functions.scala 178:106]
          node _decOut_decOut_imm_imm_T_26 = asSInt(_decOut_decOut_imm_imm_T_25) @[Functions.scala 178:119]
          decOut_decOut_imm_imm <= _decOut_decOut_imm_imm_T_26 @[Functions.scala 178:13]
        else :
          node _decOut_decOut_imm_T_3 = eq(UInt<3>("h4"), decOut.instrType) @[Functions.scala 170:23]
          when _decOut_decOut_imm_T_3 : @[Functions.scala 170:23]
            node _decOut_decOut_imm_imm_T_27 = bits(instrReg, 31, 12) @[Functions.scala 181:28]
            node _decOut_decOut_imm_imm_T_28 = mux(UInt<1>("h0"), UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 77:12]
            node _decOut_decOut_imm_imm_T_29 = cat(_decOut_decOut_imm_imm_T_27, _decOut_decOut_imm_imm_T_28) @[Functions.scala 181:37]
            node _decOut_decOut_imm_imm_T_30 = asSInt(_decOut_decOut_imm_imm_T_29) @[Functions.scala 181:55]
            decOut_decOut_imm_imm <= _decOut_decOut_imm_imm_T_30 @[Functions.scala 181:13]
          else :
            node _decOut_decOut_imm_T_4 = eq(UInt<3>("h5"), decOut.instrType) @[Functions.scala 170:23]
            when _decOut_decOut_imm_T_4 : @[Functions.scala 170:23]
              node _decOut_decOut_imm_imm_T_31 = bits(instrReg, 31, 31) @[Functions.scala 184:37]
              node _decOut_decOut_imm_imm_T_32 = bits(_decOut_decOut_imm_imm_T_31, 0, 0) @[Bitwise.scala 77:15]
              node _decOut_decOut_imm_imm_T_33 = mux(_decOut_decOut_imm_imm_T_32, UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 77:12]
              node _decOut_decOut_imm_imm_T_34 = bits(instrReg, 19, 12) @[Functions.scala 184:57]
              node _decOut_decOut_imm_imm_T_35 = cat(_decOut_decOut_imm_imm_T_33, _decOut_decOut_imm_imm_T_34) @[Functions.scala 184:43]
              node _decOut_decOut_imm_imm_T_36 = bits(instrReg, 20, 20) @[Functions.scala 184:80]
              node _decOut_decOut_imm_imm_T_37 = cat(_decOut_decOut_imm_imm_T_35, _decOut_decOut_imm_imm_T_36) @[Functions.scala 184:66]
              node _decOut_decOut_imm_imm_T_38 = bits(instrReg, 30, 21) @[Functions.scala 184:99]
              node _decOut_decOut_imm_imm_T_39 = cat(_decOut_decOut_imm_imm_T_37, _decOut_decOut_imm_imm_T_38) @[Functions.scala 184:85]
              node _decOut_decOut_imm_imm_T_40 = cat(_decOut_decOut_imm_imm_T_39, UInt<1>("h0")) @[Functions.scala 184:108]
              node _decOut_decOut_imm_imm_T_41 = asSInt(_decOut_decOut_imm_imm_T_40) @[Functions.scala 184:121]
              decOut_decOut_imm_imm <= _decOut_decOut_imm_imm_T_41 @[Functions.scala 184:13]
    decOut.imm <= decOut_decOut_imm_imm @[Functions.scala 93:16]
    wire decEx : { decOut : { instrType : UInt<3>, aluOp : UInt<4>, imm : SInt<32>, isImm : UInt<1>, isLui : UInt<1>, isAuiPc : UInt<1>, isLoad : UInt<1>, isStore : UInt<1>, isBranch : UInt<1>, isJal : UInt<1>, isJalr : UInt<1>, rfWrite : UInt<1>, isECall : UInt<1>, isCssrw : UInt<1>, rs1Valid : UInt<1>, rs2Valid : UInt<1>}, valid : UInt<1>, pc : UInt<32>, rs1 : UInt<5>, rs2 : UInt<5>, rd : UInt<5>, rs1Val : UInt<32>, rs2Val : UInt<32>, csrVal : UInt<32>, func3 : UInt<3>, memLow : UInt<2>} @[ThreeCats.scala 76:19]
    decEx.decOut <= decOut @[ThreeCats.scala 89:16]
    node _decEx_valid_T = eq(doBranch, UInt<1>("h0")) @[ThreeCats.scala 90:18]
    decEx.valid <= _decEx_valid_T @[ThreeCats.scala 90:15]
    decEx.pc <= pcRegReg @[ThreeCats.scala 91:12]
    node _decEx_rs1_T = bits(instrReg, 19, 15) @[ThreeCats.scala 92:24]
    decEx.rs1 <= _decEx_rs1_T @[ThreeCats.scala 92:13]
    node _decEx_rs2_T = bits(instrReg, 24, 20) @[ThreeCats.scala 93:24]
    decEx.rs2 <= _decEx_rs2_T @[ThreeCats.scala 93:13]
    node _decEx_rd_T = bits(instrReg, 11, 7) @[ThreeCats.scala 94:23]
    decEx.rd <= _decEx_rd_T @[ThreeCats.scala 94:12]
    decEx.rs1Val <= rs1Val @[ThreeCats.scala 95:16]
    decEx.rs2Val <= rs2Val @[ThreeCats.scala 96:16]
    decEx.csrVal <= csr.io.data @[ThreeCats.scala 97:16]
    node _decEx_func3_T = bits(instrReg, 14, 12) @[ThreeCats.scala 98:26]
    decEx.func3 <= _decEx_func3_T @[ThreeCats.scala 98:15]
    node _address_T = neq(wbDest, UInt<1>("h0")) @[ThreeCats.scala 101:38]
    node _address_T_1 = and(wrEna, _address_T) @[ThreeCats.scala 101:27]
    node _address_T_2 = eq(wbDest, decEx.rs1) @[ThreeCats.scala 101:57]
    node _address_T_3 = and(_address_T_1, _address_T_2) @[ThreeCats.scala 101:47]
    node address = mux(_address_T_3, wbData, rs1Val) @[ThreeCats.scala 101:20]
    node _data_T = neq(wbDest, UInt<1>("h0")) @[ThreeCats.scala 102:35]
    node _data_T_1 = and(wrEna, _data_T) @[ThreeCats.scala 102:24]
    node _data_T_2 = eq(wbDest, decEx.rs2) @[ThreeCats.scala 102:54]
    node _data_T_3 = and(_data_T_1, _data_T_2) @[ThreeCats.scala 102:44]
    node data = mux(_data_T_3, wbData, rs2Val) @[ThreeCats.scala 102:17]
    node _memAddress_T = asSInt(address) @[ThreeCats.scala 104:29]
    node _memAddress_T_1 = add(_memAddress_T, decOut.imm) @[ThreeCats.scala 104:36]
    node _memAddress_T_2 = tail(_memAddress_T_1, 1) @[ThreeCats.scala 104:36]
    node _memAddress_T_3 = asSInt(_memAddress_T_2) @[ThreeCats.scala 104:36]
    node memAddress = asUInt(_memAddress_T_3) @[ThreeCats.scala 104:50]
    node _decEx_memLow_T = bits(memAddress, 1, 0) @[ThreeCats.scala 105:29]
    decEx.memLow <= _decEx_memLow_T @[ThreeCats.scala 105:16]
    io.dmem.rdAddress <= memAddress @[ThreeCats.scala 107:21]
    io.dmem.rdEnable <= UInt<1>("h0") @[ThreeCats.scala 108:20]
    io.dmem.wrAddress <= memAddress @[ThreeCats.scala 109:21]
    io.dmem.wrData <= data @[ThreeCats.scala 110:18]
    wire _WIRE : UInt<1>[4] @[ThreeCats.scala 111:30]
    _WIRE[0] <= UInt<1>("h0") @[ThreeCats.scala 111:30]
    _WIRE[1] <= UInt<1>("h0") @[ThreeCats.scala 111:30]
    _WIRE[2] <= UInt<1>("h0") @[ThreeCats.scala 111:30]
    _WIRE[3] <= UInt<1>("h0") @[ThreeCats.scala 111:30]
    io.dmem.wrEnable <= _WIRE @[ThreeCats.scala 111:20]
    node _T_2 = eq(doBranch, UInt<1>("h0")) @[ThreeCats.scala 112:25]
    node _T_3 = and(decOut.isLoad, _T_2) @[ThreeCats.scala 112:22]
    when _T_3 : @[ThreeCats.scala 112:36]
      io.dmem.rdEnable <= UInt<1>("h1") @[ThreeCats.scala 113:22]
    node _T_4 = eq(doBranch, UInt<1>("h0")) @[ThreeCats.scala 115:26]
    node _T_5 = and(decOut.isStore, _T_4) @[ThreeCats.scala 115:23]
    when _T_5 : @[ThreeCats.scala 115:37]
      node _T_6 = bits(memAddress, 1, 0) @[ThreeCats.scala 116:64]
      wire wrd : UInt @[Functions.scala 316:29]
      wrd <= data @[Functions.scala 316:29]
      wire wre : UInt<1>[4] @[Functions.scala 317:27]
      wre[0] <= UInt<1>("h0") @[Functions.scala 317:27]
      wre[1] <= UInt<1>("h0") @[Functions.scala 317:27]
      wre[2] <= UInt<1>("h0") @[Functions.scala 317:27]
      wre[3] <= UInt<1>("h0") @[Functions.scala 317:27]
      node _T_7 = eq(UInt<1>("h0"), decEx.func3) @[Functions.scala 318:19]
      when _T_7 : @[Functions.scala 318:19]
        node _wrData_T = bits(data, 7, 0) @[Functions.scala 320:23]
        node _wrData_T_1 = bits(data, 7, 0) @[Functions.scala 320:37]
        node _wrData_T_2 = cat(_wrData_T, _wrData_T_1) @[Functions.scala 320:30]
        node _wrData_T_3 = bits(data, 7, 0) @[Functions.scala 320:51]
        node _wrData_T_4 = cat(_wrData_T_2, _wrData_T_3) @[Functions.scala 320:44]
        node _wrData_T_5 = bits(data, 7, 0) @[Functions.scala 320:65]
        node _wrData_T_6 = cat(_wrData_T_4, _wrData_T_5) @[Functions.scala 320:58]
        wrd <= _wrData_T_6 @[Functions.scala 320:16]
        wre[_T_6] <= UInt<1>("h1") @[Functions.scala 321:26]
      else :
        node _T_8 = eq(UInt<1>("h1"), decEx.func3) @[Functions.scala 318:19]
        when _T_8 : @[Functions.scala 318:19]
          node _wrData_T_7 = bits(data, 15, 0) @[Functions.scala 324:23]
          node _wrData_T_8 = bits(data, 15, 0) @[Functions.scala 324:38]
          node _wrData_T_9 = cat(_wrData_T_7, _wrData_T_8) @[Functions.scala 324:31]
          wrd <= _wrData_T_9 @[Functions.scala 324:16]
          node _T_9 = eq(UInt<1>("h0"), _T_6) @[Functions.scala 325:24]
          when _T_9 : @[Functions.scala 325:24]
            wre[0] <= UInt<1>("h1") @[Functions.scala 327:25]
            wre[1] <= UInt<1>("h1") @[Functions.scala 328:25]
          else :
            node _T_10 = eq(UInt<2>("h2"), _T_6) @[Functions.scala 325:24]
            when _T_10 : @[Functions.scala 325:24]
              wre[2] <= UInt<1>("h1") @[Functions.scala 331:25]
              wre[3] <= UInt<1>("h1") @[Functions.scala 332:25]
        else :
          node _T_11 = eq(UInt<2>("h2"), decEx.func3) @[Functions.scala 318:19]
          when _T_11 : @[Functions.scala 318:19]
            wire _WIRE_1 : UInt<1>[4] @[Functions.scala 337:28]
            _WIRE_1[0] <= UInt<1>("h1") @[Functions.scala 337:28]
            _WIRE_1[1] <= UInt<1>("h1") @[Functions.scala 337:28]
            _WIRE_1[2] <= UInt<1>("h1") @[Functions.scala 337:28]
            _WIRE_1[3] <= UInt<1>("h1") @[Functions.scala 337:28]
            wre <= _WIRE_1 @[Functions.scala 337:18]
      io.dmem.wrData <= wrd @[ThreeCats.scala 117:20]
      io.dmem.wrEnable <= wre @[ThreeCats.scala 118:22]
    wire decExNop : { decOut : { instrType : UInt<3>, aluOp : UInt<4>, imm : SInt<32>, isImm : UInt<1>, isLui : UInt<1>, isAuiPc : UInt<1>, isLoad : UInt<1>, isStore : UInt<1>, isBranch : UInt<1>, isJal : UInt<1>, isJalr : UInt<1>, rfWrite : UInt<1>, isECall : UInt<1>, isCssrw : UInt<1>, rs1Valid : UInt<1>, rs2Valid : UInt<1>}, valid : UInt<1>, pc : UInt<32>, rs1 : UInt<5>, rs2 : UInt<5>, rd : UInt<5>, rs1Val : UInt<32>, rs2Val : UInt<32>, csrVal : UInt<32>, func3 : UInt<3>, memLow : UInt<2>} @[ThreeCats.scala 123:30]
    decExNop.memLow <= UInt<2>("h0") @[ThreeCats.scala 123:30]
    decExNop.func3 <= UInt<3>("h0") @[ThreeCats.scala 123:30]
    decExNop.csrVal <= UInt<32>("h0") @[ThreeCats.scala 123:30]
    decExNop.rs2Val <= UInt<32>("h0") @[ThreeCats.scala 123:30]
    decExNop.rs1Val <= UInt<32>("h0") @[ThreeCats.scala 123:30]
    decExNop.rd <= UInt<5>("h0") @[ThreeCats.scala 123:30]
    decExNop.rs2 <= UInt<5>("h0") @[ThreeCats.scala 123:30]
    decExNop.rs1 <= UInt<5>("h0") @[ThreeCats.scala 123:30]
    decExNop.pc <= UInt<32>("h0") @[ThreeCats.scala 123:30]
    decExNop.valid <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.rs2Valid <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.rs1Valid <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isCssrw <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isECall <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.rfWrite <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isJalr <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isJal <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isBranch <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isStore <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isLoad <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isAuiPc <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isLui <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.isImm <= UInt<1>("h0") @[ThreeCats.scala 123:30]
    node _decExNop_T = asSInt(UInt<32>("h0")) @[ThreeCats.scala 123:30]
    decExNop.decOut.imm <= _decExNop_T @[ThreeCats.scala 123:30]
    decExNop.decOut.aluOp <= UInt<4>("h0") @[ThreeCats.scala 123:30]
    decExNop.decOut.instrType <= UInt<3>("h0") @[ThreeCats.scala 123:30]
    wire decExNop_decOut_decOut : { instrType : UInt<3>, aluOp : UInt<4>, imm : SInt<32>, isImm : UInt<1>, isLui : UInt<1>, isAuiPc : UInt<1>, isLoad : UInt<1>, isStore : UInt<1>, isBranch : UInt<1>, isJal : UInt<1>, isJalr : UInt<1>, rfWrite : UInt<1>, isECall : UInt<1>, isCssrw : UInt<1>, rs1Valid : UInt<1>, rs2Valid : UInt<1>} @[Functions.scala 19:22]
    decExNop_decOut_decOut.instrType <= UInt<1>("h0") @[Functions.scala 20:22]
    decExNop_decOut_decOut.isImm <= UInt<1>("h0") @[Functions.scala 21:18]
    decExNop_decOut_decOut.isLui <= UInt<1>("h0") @[Functions.scala 22:18]
    decExNop_decOut_decOut.isAuiPc <= UInt<1>("h0") @[Functions.scala 23:20]
    decExNop_decOut_decOut.isLoad <= UInt<1>("h0") @[Functions.scala 24:19]
    decExNop_decOut_decOut.isStore <= UInt<1>("h0") @[Functions.scala 25:20]
    decExNop_decOut_decOut.isBranch <= UInt<1>("h0") @[Functions.scala 26:21]
    decExNop_decOut_decOut.isJal <= UInt<1>("h0") @[Functions.scala 27:18]
    decExNop_decOut_decOut.isJalr <= UInt<1>("h0") @[Functions.scala 28:19]
    decExNop_decOut_decOut.rfWrite <= UInt<1>("h0") @[Functions.scala 29:20]
    decExNop_decOut_decOut.isECall <= UInt<1>("h0") @[Functions.scala 30:20]
    decExNop_decOut_decOut.isCssrw <= UInt<1>("h0") @[Functions.scala 31:20]
    decExNop_decOut_decOut.rs1Valid <= UInt<1>("h0") @[Functions.scala 32:21]
    decExNop_decOut_decOut.rs2Valid <= UInt<1>("h0") @[Functions.scala 33:21]
    node _decExNop_decOut_T = eq(UInt<5>("h13"), UInt<7>("h13")) @[Functions.scala 34:20]
    when _decExNop_decOut_T : @[Functions.scala 34:20]
      decExNop_decOut_decOut.instrType <= UInt<1>("h1") @[Functions.scala 36:26]
      decExNop_decOut_decOut.isImm <= UInt<1>("h1") @[Functions.scala 37:22]
      decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 38:24]
      decExNop_decOut_decOut.rs1Valid <= UInt<1>("h1") @[Functions.scala 39:25]
    else :
      node _decExNop_decOut_T_1 = eq(UInt<6>("h33"), UInt<7>("h13")) @[Functions.scala 34:20]
      when _decExNop_decOut_T_1 : @[Functions.scala 34:20]
        decExNop_decOut_decOut.instrType <= UInt<1>("h0") @[Functions.scala 42:26]
        decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 43:24]
        decExNop_decOut_decOut.rs1Valid <= UInt<1>("h1") @[Functions.scala 44:25]
        decExNop_decOut_decOut.rs2Valid <= UInt<1>("h1") @[Functions.scala 45:25]
      else :
        node _decExNop_decOut_T_2 = eq(UInt<7>("h63"), UInt<7>("h13")) @[Functions.scala 34:20]
        when _decExNop_decOut_T_2 : @[Functions.scala 34:20]
          decExNop_decOut_decOut.instrType <= UInt<2>("h3") @[Functions.scala 48:26]
          decExNop_decOut_decOut.isImm <= UInt<1>("h1") @[Functions.scala 49:22]
          decExNop_decOut_decOut.isBranch <= UInt<1>("h1") @[Functions.scala 50:25]
        else :
          node _decExNop_decOut_T_3 = eq(UInt<2>("h3"), UInt<7>("h13")) @[Functions.scala 34:20]
          when _decExNop_decOut_T_3 : @[Functions.scala 34:20]
            decExNop_decOut_decOut.instrType <= UInt<1>("h1") @[Functions.scala 53:26]
            decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 54:24]
            decExNop_decOut_decOut.isLoad <= UInt<1>("h1") @[Functions.scala 55:23]
          else :
            node _decExNop_decOut_T_4 = eq(UInt<6>("h23"), UInt<7>("h13")) @[Functions.scala 34:20]
            when _decExNop_decOut_T_4 : @[Functions.scala 34:20]
              decExNop_decOut_decOut.instrType <= UInt<2>("h2") @[Functions.scala 58:26]
              decExNop_decOut_decOut.isStore <= UInt<1>("h1") @[Functions.scala 59:24]
            else :
              node _decExNop_decOut_T_5 = eq(UInt<6>("h37"), UInt<7>("h13")) @[Functions.scala 34:20]
              when _decExNop_decOut_T_5 : @[Functions.scala 34:20]
                decExNop_decOut_decOut.instrType <= UInt<3>("h4") @[Functions.scala 62:26]
                decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 63:24]
                decExNop_decOut_decOut.isLui <= UInt<1>("h1") @[Functions.scala 64:22]
              else :
                node _decExNop_decOut_T_6 = eq(UInt<5>("h17"), UInt<7>("h13")) @[Functions.scala 34:20]
                when _decExNop_decOut_T_6 : @[Functions.scala 34:20]
                  decExNop_decOut_decOut.instrType <= UInt<3>("h4") @[Functions.scala 67:26]
                  decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 68:24]
                  decExNop_decOut_decOut.isAuiPc <= UInt<1>("h1") @[Functions.scala 69:24]
                else :
                  node _decExNop_decOut_T_7 = eq(UInt<7>("h6f"), UInt<7>("h13")) @[Functions.scala 34:20]
                  when _decExNop_decOut_T_7 : @[Functions.scala 34:20]
                    decExNop_decOut_decOut.instrType <= UInt<3>("h5") @[Functions.scala 72:26]
                    decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 73:24]
                    decExNop_decOut_decOut.isJal <= UInt<1>("h1") @[Functions.scala 74:22]
                  else :
                    node _decExNop_decOut_T_8 = eq(UInt<7>("h67"), UInt<7>("h13")) @[Functions.scala 34:20]
                    when _decExNop_decOut_T_8 : @[Functions.scala 34:20]
                      decExNop_decOut_decOut.instrType <= UInt<1>("h1") @[Functions.scala 77:26]
                      decExNop_decOut_decOut.isImm <= UInt<1>("h1") @[Functions.scala 78:22]
                      decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 79:24]
                      decExNop_decOut_decOut.isJalr <= UInt<1>("h1") @[Functions.scala 80:23]
                    else :
                      node _decExNop_decOut_T_9 = eq(UInt<7>("h73"), UInt<7>("h13")) @[Functions.scala 34:20]
                      when _decExNop_decOut_T_9 : @[Functions.scala 34:20]
                        decExNop_decOut_decOut.instrType <= UInt<1>("h1") @[Functions.scala 83:26]
                        node _decExNop_decOut_T_10 = eq(UInt<3>("h0"), UInt<1>("h0")) @[Functions.scala 84:21]
                        when _decExNop_decOut_T_10 : @[Functions.scala 84:30]
                          decExNop_decOut_decOut.isECall <= UInt<1>("h1") @[Functions.scala 85:26]
                        else :
                          decExNop_decOut_decOut.isCssrw <= UInt<1>("h1") @[Functions.scala 87:26]
                          decExNop_decOut_decOut.rfWrite <= UInt<1>("h1") @[Functions.scala 88:26]
    wire decExNop_decOut_decOut_aluOp_aluOp : UInt @[Functions.scala 103:28]
    decExNop_decOut_decOut_aluOp_aluOp <= UInt<1>("h0") @[Functions.scala 103:28]
    node _decExNop_decOut_decOut_aluOp_T = eq(UInt<1>("h0"), UInt<3>("h0")) @[Functions.scala 104:19]
    when _decExNop_decOut_decOut_aluOp_T : @[Functions.scala 104:19]
      decExNop_decOut_decOut_aluOp_aluOp <= UInt<1>("h0") @[Functions.scala 106:15]
      node _decExNop_decOut_decOut_aluOp_T_1 = neq(UInt<7>("h13"), UInt<5>("h13")) @[Functions.scala 107:21]
      node _decExNop_decOut_decOut_aluOp_T_2 = neq(UInt<7>("h13"), UInt<7>("h67")) @[Functions.scala 107:44]
      node _decExNop_decOut_decOut_aluOp_T_3 = and(_decExNop_decOut_decOut_aluOp_T_1, _decExNop_decOut_decOut_aluOp_T_2) @[Functions.scala 107:34]
      node _decExNop_decOut_decOut_aluOp_T_4 = neq(UInt<7>("h0"), UInt<1>("h0")) @[Functions.scala 107:64]
      node _decExNop_decOut_decOut_aluOp_T_5 = and(_decExNop_decOut_decOut_aluOp_T_3, _decExNop_decOut_decOut_aluOp_T_4) @[Functions.scala 107:55]
      when _decExNop_decOut_decOut_aluOp_T_5 : @[Functions.scala 107:73]
        decExNop_decOut_decOut_aluOp_aluOp <= UInt<1>("h1") @[Functions.scala 108:17]
    else :
      node _decExNop_decOut_decOut_aluOp_T_6 = eq(UInt<1>("h1"), UInt<3>("h0")) @[Functions.scala 104:19]
      when _decExNop_decOut_decOut_aluOp_T_6 : @[Functions.scala 104:19]
        decExNop_decOut_decOut_aluOp_aluOp <= UInt<2>("h2") @[Functions.scala 112:15]
      else :
        node _decExNop_decOut_decOut_aluOp_T_7 = eq(UInt<2>("h2"), UInt<3>("h0")) @[Functions.scala 104:19]
        when _decExNop_decOut_decOut_aluOp_T_7 : @[Functions.scala 104:19]
          decExNop_decOut_decOut_aluOp_aluOp <= UInt<2>("h3") @[Functions.scala 115:15]
        else :
          node _decExNop_decOut_decOut_aluOp_T_8 = eq(UInt<2>("h3"), UInt<3>("h0")) @[Functions.scala 104:19]
          when _decExNop_decOut_decOut_aluOp_T_8 : @[Functions.scala 104:19]
            decExNop_decOut_decOut_aluOp_aluOp <= UInt<3>("h4") @[Functions.scala 118:15]
          else :
            node _decExNop_decOut_decOut_aluOp_T_9 = eq(UInt<3>("h4"), UInt<3>("h0")) @[Functions.scala 104:19]
            when _decExNop_decOut_decOut_aluOp_T_9 : @[Functions.scala 104:19]
              decExNop_decOut_decOut_aluOp_aluOp <= UInt<3>("h5") @[Functions.scala 121:15]
            else :
              node _decExNop_decOut_decOut_aluOp_T_10 = eq(UInt<3>("h5"), UInt<3>("h0")) @[Functions.scala 104:19]
              when _decExNop_decOut_decOut_aluOp_T_10 : @[Functions.scala 104:19]
                node _decExNop_decOut_decOut_aluOp_T_11 = eq(UInt<7>("h0"), UInt<1>("h0")) @[Functions.scala 124:20]
                when _decExNop_decOut_decOut_aluOp_T_11 : @[Functions.scala 124:29]
                  decExNop_decOut_decOut_aluOp_aluOp <= UInt<3>("h6") @[Functions.scala 125:17]
                else :
                  decExNop_decOut_decOut_aluOp_aluOp <= UInt<3>("h7") @[Functions.scala 127:17]
              else :
                node _decExNop_decOut_decOut_aluOp_T_12 = eq(UInt<3>("h6"), UInt<3>("h0")) @[Functions.scala 104:19]
                when _decExNop_decOut_decOut_aluOp_T_12 : @[Functions.scala 104:19]
                  decExNop_decOut_decOut_aluOp_aluOp <= UInt<4>("h8") @[Functions.scala 131:15]
                else :
                  node _decExNop_decOut_decOut_aluOp_T_13 = eq(UInt<3>("h7"), UInt<3>("h0")) @[Functions.scala 104:19]
                  when _decExNop_decOut_decOut_aluOp_T_13 : @[Functions.scala 104:19]
                    decExNop_decOut_decOut_aluOp_aluOp <= UInt<4>("h9") @[Functions.scala 134:15]
    decExNop_decOut_decOut.aluOp <= decExNop_decOut_decOut_aluOp_aluOp @[Functions.scala 92:18]
    wire decExNop_decOut_decOut_imm_imm : SInt<32> @[Functions.scala 168:19]
    node _decExNop_decOut_decOut_imm_imm_T = asSInt(UInt<12>("h0")) @[Functions.scala 169:32]
    decExNop_decOut_decOut_imm_imm <= _decExNop_decOut_decOut_imm_imm_T @[Functions.scala 169:9]
    node _decExNop_decOut_decOut_imm_T = eq(UInt<1>("h1"), decExNop_decOut_decOut.instrType) @[Functions.scala 170:23]
    when _decExNop_decOut_decOut_imm_T : @[Functions.scala 170:23]
      node _decExNop_decOut_decOut_imm_imm_T_1 = mux(UInt<1>("h0"), UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 77:12]
      node _decExNop_decOut_decOut_imm_imm_T_2 = cat(_decExNop_decOut_decOut_imm_imm_T_1, UInt<12>("h0")) @[Functions.scala 172:43]
      node _decExNop_decOut_decOut_imm_imm_T_3 = asSInt(_decExNop_decOut_decOut_imm_imm_T_2) @[Functions.scala 172:67]
      decExNop_decOut_decOut_imm_imm <= _decExNop_decOut_decOut_imm_imm_T_3 @[Functions.scala 172:13]
    else :
      node _decExNop_decOut_decOut_imm_T_1 = eq(UInt<2>("h2"), decExNop_decOut_decOut.instrType) @[Functions.scala 170:23]
      when _decExNop_decOut_decOut_imm_T_1 : @[Functions.scala 170:23]
        node _decExNop_decOut_decOut_imm_imm_T_4 = mux(UInt<1>("h0"), UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 77:12]
        node _decExNop_decOut_decOut_imm_imm_T_5 = cat(_decExNop_decOut_decOut_imm_imm_T_4, UInt<7>("h0")) @[Functions.scala 175:43]
        node _decExNop_decOut_decOut_imm_imm_T_6 = cat(_decExNop_decOut_decOut_imm_imm_T_5, UInt<5>("h0")) @[Functions.scala 175:66]
        node _decExNop_decOut_decOut_imm_imm_T_7 = asSInt(_decExNop_decOut_decOut_imm_imm_T_6) @[Functions.scala 175:89]
        decExNop_decOut_decOut_imm_imm <= _decExNop_decOut_decOut_imm_imm_T_7 @[Functions.scala 175:13]
      else :
        node _decExNop_decOut_decOut_imm_T_2 = eq(UInt<2>("h3"), decExNop_decOut_decOut.instrType) @[Functions.scala 170:23]
        when _decExNop_decOut_decOut_imm_T_2 : @[Functions.scala 170:23]
          node _decExNop_decOut_decOut_imm_imm_T_8 = mux(UInt<1>("h0"), UInt<19>("h7ffff"), UInt<19>("h0")) @[Bitwise.scala 77:12]
          node _decExNop_decOut_decOut_imm_imm_T_9 = cat(_decExNop_decOut_decOut_imm_imm_T_8, UInt<1>("h0")) @[Functions.scala 178:43]
          node _decExNop_decOut_decOut_imm_imm_T_10 = cat(_decExNop_decOut_decOut_imm_imm_T_9, UInt<6>("h0")) @[Functions.scala 178:61]
          node _decExNop_decOut_decOut_imm_imm_T_11 = cat(_decExNop_decOut_decOut_imm_imm_T_10, UInt<4>("h0")) @[Functions.scala 178:84]
          node _decExNop_decOut_decOut_imm_imm_T_12 = cat(_decExNop_decOut_decOut_imm_imm_T_11, UInt<1>("h0")) @[Functions.scala 178:106]
          node _decExNop_decOut_decOut_imm_imm_T_13 = asSInt(_decExNop_decOut_decOut_imm_imm_T_12) @[Functions.scala 178:119]
          decExNop_decOut_decOut_imm_imm <= _decExNop_decOut_decOut_imm_imm_T_13 @[Functions.scala 178:13]
        else :
          node _decExNop_decOut_decOut_imm_T_3 = eq(UInt<3>("h4"), decExNop_decOut_decOut.instrType) @[Functions.scala 170:23]
          when _decExNop_decOut_decOut_imm_T_3 : @[Functions.scala 170:23]
            node _decExNop_decOut_decOut_imm_imm_T_14 = mux(UInt<1>("h0"), UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 77:12]
            node _decExNop_decOut_decOut_imm_imm_T_15 = cat(UInt<20>("h0"), _decExNop_decOut_decOut_imm_imm_T_14) @[Functions.scala 181:37]
            node _decExNop_decOut_decOut_imm_imm_T_16 = asSInt(_decExNop_decOut_decOut_imm_imm_T_15) @[Functions.scala 181:55]
            decExNop_decOut_decOut_imm_imm <= _decExNop_decOut_decOut_imm_imm_T_16 @[Functions.scala 181:13]
          else :
            node _decExNop_decOut_decOut_imm_T_4 = eq(UInt<3>("h5"), decExNop_decOut_decOut.instrType) @[Functions.scala 170:23]
            when _decExNop_decOut_decOut_imm_T_4 : @[Functions.scala 170:23]
              node _decExNop_decOut_decOut_imm_imm_T_17 = mux(UInt<1>("h0"), UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 77:12]
              node _decExNop_decOut_decOut_imm_imm_T_18 = cat(_decExNop_decOut_decOut_imm_imm_T_17, UInt<8>("h0")) @[Functions.scala 184:43]
              node _decExNop_decOut_decOut_imm_imm_T_19 = cat(_decExNop_decOut_decOut_imm_imm_T_18, UInt<1>("h0")) @[Functions.scala 184:66]
              node _decExNop_decOut_decOut_imm_imm_T_20 = cat(_decExNop_decOut_decOut_imm_imm_T_19, UInt<10>("h0")) @[Functions.scala 184:85]
              node _decExNop_decOut_decOut_imm_imm_T_21 = cat(_decExNop_decOut_decOut_imm_imm_T_20, UInt<1>("h0")) @[Functions.scala 184:108]
              node _decExNop_decOut_decOut_imm_imm_T_22 = asSInt(_decExNop_decOut_decOut_imm_imm_T_21) @[Functions.scala 184:121]
              decExNop_decOut_decOut_imm_imm <= _decExNop_decOut_decOut_imm_imm_T_22 @[Functions.scala 184:13]
    decExNop_decOut_decOut.imm <= decExNop_decOut_decOut_imm_imm @[Functions.scala 93:16]
    decExNop.decOut <= decExNop_decOut_decOut @[ThreeCats.scala 124:19]
    reg decExReg : { decOut : { instrType : UInt<3>, aluOp : UInt<4>, imm : SInt<32>, isImm : UInt<1>, isLui : UInt<1>, isAuiPc : UInt<1>, isLoad : UInt<1>, isStore : UInt<1>, isBranch : UInt<1>, isJal : UInt<1>, isJalr : UInt<1>, rfWrite : UInt<1>, isECall : UInt<1>, isCssrw : UInt<1>, rs1Valid : UInt<1>, rs2Valid : UInt<1>}, valid : UInt<1>, pc : UInt<32>, rs1 : UInt<5>, rs2 : UInt<5>, rd : UInt<5>, rs1Val : UInt<32>, rs2Val : UInt<32>, csrVal : UInt<32>, func3 : UInt<3>, memLow : UInt<2>}, clock with :
      reset => (reset, decExNop) @[ThreeCats.scala 125:25]
    node _decExReg_T = mux(doBranch, decExNop, decEx) @[ThreeCats.scala 126:18]
    decExReg <= _decExReg_T @[ThreeCats.scala 126:12]
    node _v1_T = eq(exFwdReg.wbDest, decExReg.rs1) @[ThreeCats.scala 129:50]
    node _v1_T_1 = and(exFwdReg.valid, _v1_T) @[ThreeCats.scala 129:31]
    node v1 = mux(_v1_T_1, exFwdReg.wbData, decExReg.rs1Val) @[ThreeCats.scala 129:15]
    node _v2_T = eq(exFwdReg.wbDest, decExReg.rs2) @[ThreeCats.scala 130:50]
    node _v2_T_1 = and(exFwdReg.valid, _v2_T) @[ThreeCats.scala 130:31]
    node v2 = mux(_v2_T_1, exFwdReg.wbData, decExReg.rs2Val) @[ThreeCats.scala 130:15]
    wire res : UInt<32> @[ThreeCats.scala 132:17]
    node _val2_T = asUInt(decExReg.decOut.imm) @[ThreeCats.scala 133:61]
    node val2 = mux(decExReg.decOut.isImm, _val2_T, v2) @[ThreeCats.scala 133:17]
    wire res_res : UInt<32> @[Functions.scala 217:19]
    res_res is invalid @[Functions.scala 218:9]
    node _res_T = eq(UInt<1>("h0"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
    when _res_T : @[Functions.scala 219:16]
      node _res_res_T = add(v1, val2) @[Functions.scala 221:18]
      node _res_res_T_1 = tail(_res_res_T, 1) @[Functions.scala 221:18]
      res_res <= _res_res_T_1 @[Functions.scala 221:13]
    else :
      node _res_T_1 = eq(UInt<1>("h1"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
      when _res_T_1 : @[Functions.scala 219:16]
        node _res_res_T_2 = sub(v1, val2) @[Functions.scala 224:18]
        node _res_res_T_3 = tail(_res_res_T_2, 1) @[Functions.scala 224:18]
        res_res <= _res_res_T_3 @[Functions.scala 224:13]
      else :
        node _res_T_2 = eq(UInt<4>("h9"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
        when _res_T_2 : @[Functions.scala 219:16]
          node _res_res_T_4 = and(v1, val2) @[Functions.scala 227:18]
          res_res <= _res_res_T_4 @[Functions.scala 227:13]
        else :
          node _res_T_3 = eq(UInt<4>("h8"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
          when _res_T_3 : @[Functions.scala 219:16]
            node _res_res_T_5 = or(v1, val2) @[Functions.scala 230:18]
            res_res <= _res_res_T_5 @[Functions.scala 230:13]
          else :
            node _res_T_4 = eq(UInt<3>("h5"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
            when _res_T_4 : @[Functions.scala 219:16]
              node _res_res_T_6 = xor(v1, val2) @[Functions.scala 233:18]
              res_res <= _res_res_T_6 @[Functions.scala 233:13]
            else :
              node _res_T_5 = eq(UInt<2>("h2"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
              when _res_T_5 : @[Functions.scala 219:16]
                node _res_res_T_7 = bits(val2, 4, 0) @[Functions.scala 236:22]
                node _res_res_T_8 = dshl(v1, _res_res_T_7) @[Functions.scala 236:18]
                res_res <= _res_res_T_8 @[Functions.scala 236:13]
              else :
                node _res_T_6 = eq(UInt<3>("h6"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
                when _res_T_6 : @[Functions.scala 219:16]
                  node _res_res_T_9 = bits(val2, 4, 0) @[Functions.scala 239:22]
                  node _res_res_T_10 = dshr(v1, _res_res_T_9) @[Functions.scala 239:18]
                  res_res <= _res_res_T_10 @[Functions.scala 239:13]
                else :
                  node _res_T_7 = eq(UInt<3>("h7"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
                  when _res_T_7 : @[Functions.scala 219:16]
                    node _res_res_T_11 = asSInt(v1) @[Functions.scala 242:19]
                    node _res_res_T_12 = bits(val2, 4, 0) @[Functions.scala 242:30]
                    node _res_res_T_13 = dshr(_res_res_T_11, _res_res_T_12) @[Functions.scala 242:26]
                    node _res_res_T_14 = asUInt(_res_res_T_13) @[Functions.scala 242:38]
                    res_res <= _res_res_T_14 @[Functions.scala 242:13]
                  else :
                    node _res_T_8 = eq(UInt<2>("h3"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
                    when _res_T_8 : @[Functions.scala 219:16]
                      node _res_res_T_15 = asSInt(v1) @[Functions.scala 245:19]
                      node _res_res_T_16 = asSInt(val2) @[Functions.scala 245:30]
                      node _res_res_T_17 = lt(_res_res_T_15, _res_res_T_16) @[Functions.scala 245:26]
                      res_res <= _res_res_T_17 @[Functions.scala 245:13]
                    else :
                      node _res_T_9 = eq(UInt<3>("h4"), decExReg.decOut.aluOp) @[Functions.scala 219:16]
                      when _res_T_9 : @[Functions.scala 219:16]
                        node _res_res_T_18 = lt(v1, val2) @[Functions.scala 248:19]
                        res_res <= _res_res_T_18 @[Functions.scala 248:13]
    res <= res_res @[ThreeCats.scala 134:7]
    when decExReg.decOut.isLui : @[ThreeCats.scala 135:31]
      node _res_T_10 = asUInt(decExReg.decOut.imm) @[ThreeCats.scala 136:32]
      res <= _res_T_10 @[ThreeCats.scala 136:9]
    when decExReg.decOut.isAuiPc : @[ThreeCats.scala 138:33]
      node _res_T_11 = asSInt(decExReg.pc) @[ThreeCats.scala 139:25]
      node _res_T_12 = add(_res_T_11, decExReg.decOut.imm) @[ThreeCats.scala 139:32]
      node _res_T_13 = tail(_res_T_12, 1) @[ThreeCats.scala 139:32]
      node _res_T_14 = asSInt(_res_T_13) @[ThreeCats.scala 139:32]
      node _res_T_15 = asUInt(_res_T_14) @[ThreeCats.scala 139:55]
      res <= _res_T_15 @[ThreeCats.scala 139:9]
    when decExReg.decOut.isCssrw : @[ThreeCats.scala 141:33]
      res <= decExReg.csrVal @[ThreeCats.scala 142:9]
    wbDest <= decExReg.rd @[ThreeCats.scala 145:10]
    wbData <= res @[ThreeCats.scala 146:10]
    node _T_12 = or(decExReg.decOut.isJal, decExReg.decOut.isJalr) @[ThreeCats.scala 147:30]
    when _T_12 : @[ThreeCats.scala 147:57]
      node _wbData_T = add(decExReg.pc, UInt<3>("h4")) @[ThreeCats.scala 148:27]
      node _wbData_T_1 = tail(_wbData_T, 1) @[ThreeCats.scala 148:27]
      wbData <= _wbData_T_1 @[ThreeCats.scala 148:12]
    node _branchTarget_T = asSInt(decExReg.pc) @[ThreeCats.scala 151:32]
    node _branchTarget_T_1 = add(_branchTarget_T, decExReg.decOut.imm) @[ThreeCats.scala 151:39]
    node _branchTarget_T_2 = tail(_branchTarget_T_1, 1) @[ThreeCats.scala 151:39]
    node _branchTarget_T_3 = asSInt(_branchTarget_T_2) @[ThreeCats.scala 151:39]
    node _branchTarget_T_4 = asUInt(_branchTarget_T_3) @[ThreeCats.scala 151:62]
    branchTarget <= _branchTarget_T_4 @[ThreeCats.scala 151:16]
    when decExReg.decOut.isJalr : @[ThreeCats.scala 152:32]
      branchTarget <= res @[ThreeCats.scala 153:18]
    wire doBranch_res : UInt<1> @[Functions.scala 141:19]
    doBranch_res <= UInt<1>("h0") @[Functions.scala 142:9]
    node _doBranch_T = eq(UInt<1>("h0"), decExReg.func3) @[Functions.scala 143:20]
    when _doBranch_T : @[Functions.scala 143:20]
      node _doBranch_res_T = eq(v1, v2) @[Functions.scala 145:20]
      doBranch_res <= _doBranch_res_T @[Functions.scala 145:13]
    else :
      node _doBranch_T_1 = eq(UInt<1>("h1"), decExReg.func3) @[Functions.scala 143:20]
      when _doBranch_T_1 : @[Functions.scala 143:20]
        node _doBranch_res_T_1 = neq(v1, v2) @[Functions.scala 148:20]
        doBranch_res <= _doBranch_res_T_1 @[Functions.scala 148:13]
      else :
        node _doBranch_T_2 = eq(UInt<3>("h4"), decExReg.func3) @[Functions.scala 143:20]
        when _doBranch_T_2 : @[Functions.scala 143:20]
          node _doBranch_res_T_2 = asSInt(v1) @[Functions.scala 151:20]
          node _doBranch_res_T_3 = asSInt(v2) @[Functions.scala 151:33]
          node _doBranch_res_T_4 = lt(_doBranch_res_T_2, _doBranch_res_T_3) @[Functions.scala 151:27]
          doBranch_res <= _doBranch_res_T_4 @[Functions.scala 151:13]
        else :
          node _doBranch_T_3 = eq(UInt<3>("h5"), decExReg.func3) @[Functions.scala 143:20]
          when _doBranch_T_3 : @[Functions.scala 143:20]
            node _doBranch_res_T_5 = asSInt(v1) @[Functions.scala 154:20]
            node _doBranch_res_T_6 = asSInt(v2) @[Functions.scala 154:34]
            node _doBranch_res_T_7 = geq(_doBranch_res_T_5, _doBranch_res_T_6) @[Functions.scala 154:27]
            doBranch_res <= _doBranch_res_T_7 @[Functions.scala 154:13]
          else :
            node _doBranch_T_4 = eq(UInt<3>("h6"), decExReg.func3) @[Functions.scala 143:20]
            when _doBranch_T_4 : @[Functions.scala 143:20]
              node _doBranch_res_T_8 = lt(v1, v2) @[Functions.scala 157:20]
              doBranch_res <= _doBranch_res_T_8 @[Functions.scala 157:13]
            else :
              node _doBranch_T_5 = eq(UInt<3>("h7"), decExReg.func3) @[Functions.scala 143:20]
              when _doBranch_T_5 : @[Functions.scala 143:20]
                node _doBranch_res_T_9 = geq(v1, v2) @[Functions.scala 160:20]
                doBranch_res <= _doBranch_res_T_9 @[Functions.scala 160:13]
    node _doBranch_T_6 = and(doBranch_res, decExReg.decOut.isBranch) @[ThreeCats.scala 155:49]
    node _doBranch_T_7 = or(_doBranch_T_6, decExReg.decOut.isJal) @[ThreeCats.scala 155:78]
    node _doBranch_T_8 = or(_doBranch_T_7, decExReg.decOut.isJalr) @[ThreeCats.scala 155:103]
    node _doBranch_T_9 = and(_doBranch_T_8, decExReg.valid) @[ThreeCats.scala 155:130]
    doBranch <= _doBranch_T_9 @[ThreeCats.scala 155:12]
    node _wrEna_T = and(decExReg.valid, decExReg.decOut.rfWrite) @[ThreeCats.scala 156:27]
    wrEna <= _wrEna_T @[ThreeCats.scala 156:9]
    node _T_13 = eq(doBranch, UInt<1>("h0")) @[ThreeCats.scala 159:34]
    node _T_14 = and(decExReg.decOut.isLoad, _T_13) @[ThreeCats.scala 159:31]
    when _T_14 : @[ThreeCats.scala 159:45]
      wire res_res_1 : UInt<32> @[Functions.scala 255:19]
      res_res_1 <= io.dmem.rdData @[Functions.scala 256:9]
      node _res_T_16 = eq(UInt<1>("h0"), decExReg.func3) @[Functions.scala 257:19]
      when _res_T_16 : @[Functions.scala 257:19]
        node _res_T_17 = eq(UInt<1>("h0"), decExReg.memLow) @[Functions.scala 259:24]
        when _res_T_17 : @[Functions.scala 259:24]
          node _res_res_T_19 = bits(io.dmem.rdData, 7, 7) @[Functions.scala 261:33]
          node _res_res_T_20 = bits(_res_res_T_19, 0, 0) @[Bitwise.scala 77:15]
          node _res_res_T_21 = mux(_res_res_T_20, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 77:12]
          node _res_res_T_22 = bits(io.dmem.rdData, 7, 0) @[Functions.scala 261:45]
          node _res_res_T_23 = cat(_res_res_T_21, _res_res_T_22) @[Functions.scala 261:38]
          res_res_1 <= _res_res_T_23 @[Functions.scala 261:17]
        else :
          node _res_T_18 = eq(UInt<1>("h1"), decExReg.memLow) @[Functions.scala 259:24]
          when _res_T_18 : @[Functions.scala 259:24]
            node _res_res_T_24 = bits(io.dmem.rdData, 15, 15) @[Functions.scala 264:33]
            node _res_res_T_25 = bits(_res_res_T_24, 0, 0) @[Bitwise.scala 77:15]
            node _res_res_T_26 = mux(_res_res_T_25, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 77:12]
            node _res_res_T_27 = bits(io.dmem.rdData, 15, 8) @[Functions.scala 264:46]
            node _res_res_T_28 = cat(_res_res_T_26, _res_res_T_27) @[Functions.scala 264:39]
            res_res_1 <= _res_res_T_28 @[Functions.scala 264:17]
          else :
            node _res_T_19 = eq(UInt<2>("h2"), decExReg.memLow) @[Functions.scala 259:24]
            when _res_T_19 : @[Functions.scala 259:24]
              node _res_res_T_29 = bits(io.dmem.rdData, 23, 23) @[Functions.scala 267:33]
              node _res_res_T_30 = bits(_res_res_T_29, 0, 0) @[Bitwise.scala 77:15]
              node _res_res_T_31 = mux(_res_res_T_30, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 77:12]
              node _res_res_T_32 = bits(io.dmem.rdData, 23, 16) @[Functions.scala 267:46]
              node _res_res_T_33 = cat(_res_res_T_31, _res_res_T_32) @[Functions.scala 267:39]
              res_res_1 <= _res_res_T_33 @[Functions.scala 267:17]
            else :
              node _res_T_20 = eq(UInt<2>("h3"), decExReg.memLow) @[Functions.scala 259:24]
              when _res_T_20 : @[Functions.scala 259:24]
                node _res_res_T_34 = bits(io.dmem.rdData, 31, 31) @[Functions.scala 271:33]
                node _res_res_T_35 = bits(_res_res_T_34, 0, 0) @[Bitwise.scala 77:15]
                node _res_res_T_36 = mux(_res_res_T_35, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 77:12]
                node _res_res_T_37 = bits(io.dmem.rdData, 31, 24) @[Functions.scala 271:46]
                node _res_res_T_38 = cat(_res_res_T_36, _res_res_T_37) @[Functions.scala 271:39]
                res_res_1 <= _res_res_T_38 @[Functions.scala 271:17]
      else :
        node _res_T_21 = eq(UInt<1>("h1"), decExReg.func3) @[Functions.scala 257:19]
        when _res_T_21 : @[Functions.scala 257:19]
          node _res_T_22 = eq(UInt<1>("h0"), decExReg.memLow) @[Functions.scala 276:24]
          when _res_T_22 : @[Functions.scala 276:24]
            node _res_res_T_39 = bits(io.dmem.rdData, 15, 15) @[Functions.scala 278:33]
            node _res_res_T_40 = bits(_res_res_T_39, 0, 0) @[Bitwise.scala 77:15]
            node _res_res_T_41 = mux(_res_res_T_40, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
            node _res_res_T_42 = bits(io.dmem.rdData, 15, 0) @[Functions.scala 278:46]
            node _res_res_T_43 = cat(_res_res_T_41, _res_res_T_42) @[Functions.scala 278:39]
            res_res_1 <= _res_res_T_43 @[Functions.scala 278:17]
          else :
            node _res_T_23 = eq(UInt<2>("h2"), decExReg.memLow) @[Functions.scala 276:24]
            when _res_T_23 : @[Functions.scala 276:24]
              node _res_res_T_44 = bits(io.dmem.rdData, 31, 31) @[Functions.scala 281:33]
              node _res_res_T_45 = bits(_res_res_T_44, 0, 0) @[Bitwise.scala 77:15]
              node _res_res_T_46 = mux(_res_res_T_45, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
              node _res_res_T_47 = bits(io.dmem.rdData, 31, 16) @[Functions.scala 281:46]
              node _res_res_T_48 = cat(_res_res_T_46, _res_res_T_47) @[Functions.scala 281:39]
              res_res_1 <= _res_res_T_48 @[Functions.scala 281:17]
        else :
          node _res_T_24 = eq(UInt<3>("h4"), decExReg.func3) @[Functions.scala 257:19]
          when _res_T_24 : @[Functions.scala 257:19]
            node _res_T_25 = eq(UInt<1>("h0"), decExReg.memLow) @[Functions.scala 286:24]
            when _res_T_25 : @[Functions.scala 286:24]
              node _res_res_T_49 = bits(io.dmem.rdData, 7, 0) @[Functions.scala 288:24]
              res_res_1 <= _res_res_T_49 @[Functions.scala 288:17]
            else :
              node _res_T_26 = eq(UInt<1>("h1"), decExReg.memLow) @[Functions.scala 286:24]
              when _res_T_26 : @[Functions.scala 286:24]
                node _res_res_T_50 = bits(io.dmem.rdData, 15, 8) @[Functions.scala 291:24]
                res_res_1 <= _res_res_T_50 @[Functions.scala 291:17]
              else :
                node _res_T_27 = eq(UInt<2>("h2"), decExReg.memLow) @[Functions.scala 286:24]
                when _res_T_27 : @[Functions.scala 286:24]
                  node _res_res_T_51 = bits(io.dmem.rdData, 23, 16) @[Functions.scala 294:24]
                  res_res_1 <= _res_res_T_51 @[Functions.scala 294:17]
                else :
                  node _res_T_28 = eq(UInt<2>("h3"), decExReg.memLow) @[Functions.scala 286:24]
                  when _res_T_28 : @[Functions.scala 286:24]
                    node _res_res_T_52 = bits(io.dmem.rdData, 31, 24) @[Functions.scala 297:24]
                    res_res_1 <= _res_res_T_52 @[Functions.scala 297:17]
          else :
            node _res_T_29 = eq(UInt<3>("h5"), decExReg.func3) @[Functions.scala 257:19]
            when _res_T_29 : @[Functions.scala 257:19]
              node _res_T_30 = eq(UInt<1>("h0"), decExReg.memLow) @[Functions.scala 302:24]
              when _res_T_30 : @[Functions.scala 302:24]
                node _res_res_T_53 = bits(io.dmem.rdData, 15, 0) @[Functions.scala 304:24]
                res_res_1 <= _res_res_T_53 @[Functions.scala 304:17]
              else :
                node _res_T_31 = eq(UInt<2>("h2"), decExReg.memLow) @[Functions.scala 302:24]
                when _res_T_31 : @[Functions.scala 302:24]
                  node _res_res_T_54 = bits(io.dmem.rdData, 31, 16) @[Functions.scala 307:24]
                  res_res_1 <= _res_res_T_54 @[Functions.scala 307:17]
      res <= res_res_1 @[ThreeCats.scala 160:9]
    node _exFwdReg_valid_T = neq(wbDest, UInt<1>("h0")) @[ThreeCats.scala 165:38]
    node _exFwdReg_valid_T_1 = and(wrEna, _exFwdReg_valid_T) @[ThreeCats.scala 165:27]
    exFwdReg.valid <= _exFwdReg_valid_T_1 @[ThreeCats.scala 165:18]
    exFwdReg.wbDest <= wbDest @[ThreeCats.scala 166:19]
    exFwdReg.wbData <= wbData @[ThreeCats.scala 167:19]
    when firstIter : @[ThreeCats.scala 173:19]
      firstIter <= UInt<1>("h0") @[ThreeCats.scala 174:15]


  module ScratchPadMem :
    input clock : Clock
    input reset : Reset
    input io : { rdAddress : UInt<32>, flip rdData : UInt<32>, rdEnable : UInt<1>, wrAddress : UInt<32>, wrData : UInt<32>, wrEnable : UInt<1>[4], flip stall : UInt<1>}

    smem MEM : UInt<8> [1024] @[ScratchPadMem.scala 14:16]
    smem MEM_1 : UInt<8> [1024] @[ScratchPadMem.scala 15:16]
    smem MEM_2 : UInt<8> [1024] @[ScratchPadMem.scala 16:16]
    smem MEM_3 : UInt<8> [1024] @[ScratchPadMem.scala 17:16]
    node _io_rdData_T = bits(io.rdAddress, 12, 2) @[ScratchPadMem.scala 57:41]
    wire _io_rdData_WIRE : UInt @[ScratchPadMem.scala 57:28]
    _io_rdData_WIRE is invalid @[ScratchPadMem.scala 57:28]
    when UInt<1>("h1") : @[ScratchPadMem.scala 57:28]
      _io_rdData_WIRE <= _io_rdData_T @[ScratchPadMem.scala 57:28]
      node _io_rdData_T_1 = or(_io_rdData_WIRE, UInt<10>("h0")) @[ScratchPadMem.scala 57:28]
      node _io_rdData_T_2 = bits(_io_rdData_T_1, 9, 0) @[ScratchPadMem.scala 57:28]
      read mport io_rdData_MPORT = MEM_3[_io_rdData_T_2], clock @[ScratchPadMem.scala 57:28]
    node _io_rdData_T_3 = bits(io.rdAddress, 12, 2) @[ScratchPadMem.scala 57:81]
    wire _io_rdData_WIRE_1 : UInt @[ScratchPadMem.scala 57:68]
    _io_rdData_WIRE_1 is invalid @[ScratchPadMem.scala 57:68]
    when UInt<1>("h1") : @[ScratchPadMem.scala 57:68]
      _io_rdData_WIRE_1 <= _io_rdData_T_3 @[ScratchPadMem.scala 57:68]
      node _io_rdData_T_4 = or(_io_rdData_WIRE_1, UInt<10>("h0")) @[ScratchPadMem.scala 57:68]
      node _io_rdData_T_5 = bits(_io_rdData_T_4, 9, 0) @[ScratchPadMem.scala 57:68]
      read mport io_rdData_MPORT_1 = MEM_2[_io_rdData_T_5], clock @[ScratchPadMem.scala 57:68]
    node _io_rdData_T_6 = cat(io_rdData_MPORT, io_rdData_MPORT_1) @[ScratchPadMem.scala 57:53]
    node _io_rdData_T_7 = bits(io.rdAddress, 12, 2) @[ScratchPadMem.scala 57:121]
    wire _io_rdData_WIRE_2 : UInt @[ScratchPadMem.scala 57:108]
    _io_rdData_WIRE_2 is invalid @[ScratchPadMem.scala 57:108]
    when UInt<1>("h1") : @[ScratchPadMem.scala 57:108]
      _io_rdData_WIRE_2 <= _io_rdData_T_7 @[ScratchPadMem.scala 57:108]
      node _io_rdData_T_8 = or(_io_rdData_WIRE_2, UInt<10>("h0")) @[ScratchPadMem.scala 57:108]
      node _io_rdData_T_9 = bits(_io_rdData_T_8, 9, 0) @[ScratchPadMem.scala 57:108]
      read mport io_rdData_MPORT_2 = MEM_1[_io_rdData_T_9], clock @[ScratchPadMem.scala 57:108]
    node _io_rdData_T_10 = cat(_io_rdData_T_6, io_rdData_MPORT_2) @[ScratchPadMem.scala 57:93]
    node _io_rdData_T_11 = bits(io.rdAddress, 12, 2) @[ScratchPadMem.scala 57:161]
    wire _io_rdData_WIRE_3 : UInt @[ScratchPadMem.scala 57:148]
    _io_rdData_WIRE_3 is invalid @[ScratchPadMem.scala 57:148]
    when UInt<1>("h1") : @[ScratchPadMem.scala 57:148]
      _io_rdData_WIRE_3 <= _io_rdData_T_11 @[ScratchPadMem.scala 57:148]
      node _io_rdData_T_12 = or(_io_rdData_WIRE_3, UInt<10>("h0")) @[ScratchPadMem.scala 57:148]
      node _io_rdData_T_13 = bits(_io_rdData_T_12, 9, 0) @[ScratchPadMem.scala 57:148]
      read mport io_rdData_MPORT_3 = MEM[_io_rdData_T_13], clock @[ScratchPadMem.scala 57:148]
    node _io_rdData_T_14 = cat(_io_rdData_T_10, io_rdData_MPORT_3) @[ScratchPadMem.scala 57:133]
    io.rdData <= _io_rdData_T_14 @[ScratchPadMem.scala 57:13]
    when io.wrEnable[0] : @[ScratchPadMem.scala 58:24]
      node _T = bits(io.wrAddress, 12, 2) @[ScratchPadMem.scala 59:31]
      node _T_1 = bits(io.wrData, 7, 0) @[ScratchPadMem.scala 59:52]
      node _T_2 = bits(_T, 9, 0)
      write mport MPORT = MEM[_T_2], clock
      MPORT <= _T_1
    when io.wrEnable[1] : @[ScratchPadMem.scala 61:24]
      node _T_3 = bits(io.wrAddress, 12, 2) @[ScratchPadMem.scala 62:31]
      node _T_4 = bits(io.wrData, 15, 8) @[ScratchPadMem.scala 62:52]
      node _T_5 = bits(_T_3, 9, 0)
      write mport MPORT_1 = MEM_1[_T_5], clock
      MPORT_1 <= _T_4
    when io.wrEnable[2] : @[ScratchPadMem.scala 64:24]
      node _T_6 = bits(io.wrAddress, 12, 2) @[ScratchPadMem.scala 65:31]
      node _T_7 = bits(io.wrData, 23, 16) @[ScratchPadMem.scala 65:52]
      node _T_8 = bits(_T_6, 9, 0)
      write mport MPORT_2 = MEM_2[_T_8], clock
      MPORT_2 <= _T_7
    when io.wrEnable[3] : @[ScratchPadMem.scala 67:24]
      node _T_9 = bits(io.wrAddress, 12, 2) @[ScratchPadMem.scala 68:31]
      node _T_10 = bits(io.wrData, 31, 24) @[ScratchPadMem.scala 68:52]
      node _T_11 = bits(_T_9, 9, 0)
      write mport MPORT_3 = MEM_3[_T_11], clock
      MPORT_3 <= _T_10
    io.stall <= UInt<1>("h0") @[ScratchPadMem.scala 70:12]

  module InstructionROM :
    input clock : Clock
    input reset : Reset
    input io : { address : UInt<32>, flip data : UInt<32>, flip stall : UInt<1>}

    reg addrReg : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[InstructionROM.scala 11:24]
    addrReg <= io.address @[InstructionROM.scala 12:11]
    node _instructions_T = asUInt(asSInt(UInt<32>("hf0000537"))) @[InstructionROM.scala 13:62]
    node _instructions_T_1 = asUInt(asSInt(UInt<32>("h4800593"))) @[InstructionROM.scala 13:62]
    node _instructions_T_2 = asUInt(asSInt(UInt<32>("h6500613"))) @[InstructionROM.scala 13:62]
    node _instructions_T_3 = asUInt(asSInt(UInt<32>("h6c00693"))) @[InstructionROM.scala 13:62]
    node _instructions_T_4 = asUInt(asSInt(UInt<32>("hb52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_5 = asUInt(asSInt(UInt<32>("h6f00593"))) @[InstructionROM.scala 13:62]
    node _instructions_T_6 = asUInt(asSInt(UInt<32>("hc52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_7 = asUInt(asSInt(UInt<32>("h2000613"))) @[InstructionROM.scala 13:62]
    node _instructions_T_8 = asUInt(asSInt(UInt<32>("hd52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_9 = asUInt(asSInt(UInt<32>("hd52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_10 = asUInt(asSInt(UInt<32>("hb52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_11 = asUInt(asSInt(UInt<32>("hc52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_12 = asUInt(asSInt(UInt<32>("h5700613"))) @[InstructionROM.scala 13:62]
    node _instructions_T_13 = asUInt(asSInt(UInt<32>("hc52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_14 = asUInt(asSInt(UInt<32>("h7200613"))) @[InstructionROM.scala 13:62]
    node _instructions_T_15 = asUInt(asSInt(UInt<32>("hb52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_16 = asUInt(asSInt(UInt<32>("h6400593"))) @[InstructionROM.scala 13:62]
    node _instructions_T_17 = asUInt(asSInt(UInt<32>("hc52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_18 = asUInt(asSInt(UInt<32>("h2100613"))) @[InstructionROM.scala 13:62]
    node _instructions_T_19 = asUInt(asSInt(UInt<32>("hd52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_20 = asUInt(asSInt(UInt<32>("hb52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_21 = asUInt(asSInt(UInt<32>("hc52223"))) @[InstructionROM.scala 13:62]
    node _instructions_T_22 = asUInt(asSInt(UInt<32>("h6f"))) @[InstructionROM.scala 13:62]
    wire instructions : UInt<32>[23] @[InstructionROM.scala 13:29]
    instructions[0] <= _instructions_T @[InstructionROM.scala 13:29]
    instructions[1] <= _instructions_T_1 @[InstructionROM.scala 13:29]
    instructions[2] <= _instructions_T_2 @[InstructionROM.scala 13:29]
    instructions[3] <= _instructions_T_3 @[InstructionROM.scala 13:29]
    instructions[4] <= _instructions_T_4 @[InstructionROM.scala 13:29]
    instructions[5] <= _instructions_T_5 @[InstructionROM.scala 13:29]
    instructions[6] <= _instructions_T_6 @[InstructionROM.scala 13:29]
    instructions[7] <= _instructions_T_7 @[InstructionROM.scala 13:29]
    instructions[8] <= _instructions_T_8 @[InstructionROM.scala 13:29]
    instructions[9] <= _instructions_T_9 @[InstructionROM.scala 13:29]
    instructions[10] <= _instructions_T_10 @[InstructionROM.scala 13:29]
    instructions[11] <= _instructions_T_11 @[InstructionROM.scala 13:29]
    instructions[12] <= _instructions_T_12 @[InstructionROM.scala 13:29]
    instructions[13] <= _instructions_T_13 @[InstructionROM.scala 13:29]
    instructions[14] <= _instructions_T_14 @[InstructionROM.scala 13:29]
    instructions[15] <= _instructions_T_15 @[InstructionROM.scala 13:29]
    instructions[16] <= _instructions_T_16 @[InstructionROM.scala 13:29]
    instructions[17] <= _instructions_T_17 @[InstructionROM.scala 13:29]
    instructions[18] <= _instructions_T_18 @[InstructionROM.scala 13:29]
    instructions[19] <= _instructions_T_19 @[InstructionROM.scala 13:29]
    instructions[20] <= _instructions_T_20 @[InstructionROM.scala 13:29]
    instructions[21] <= _instructions_T_21 @[InstructionROM.scala 13:29]
    instructions[22] <= _instructions_T_22 @[InstructionROM.scala 13:29]
    node _io_data_T = bits(addrReg, 31, 2) @[InstructionROM.scala 14:34]
    node _io_data_T_1 = bits(_io_data_T, 4, 0)
    io.data <= instructions[_io_data_T_1] @[InstructionROM.scala 14:11]
    reg toggle : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[InstructionROM.scala 16:23]
    node _toggle_T = eq(toggle, UInt<1>("h0")) @[InstructionROM.scala 17:13]
    toggle <= _toggle_T @[InstructionROM.scala 17:10]
    io.stall <= UInt<1>("h0") @[InstructionROM.scala 18:12]

  module Tx :
    input clock : Clock
    input reset : Reset
    output io : { txd : UInt<1>, flip channel : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}}

    reg shiftReg : UInt, clock with :
      reset => (reset, UInt<11>("h7ff")) @[Uart.scala 30:25]
    reg cntReg : UInt<20>, clock with :
      reset => (reset, UInt<20>("h0")) @[Uart.scala 31:23]
    reg bitsReg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Uart.scala 32:24]
    node _io_channel_ready_T = eq(cntReg, UInt<1>("h0")) @[Uart.scala 34:31]
    node _io_channel_ready_T_1 = eq(bitsReg, UInt<1>("h0")) @[Uart.scala 34:52]
    node _io_channel_ready_T_2 = and(_io_channel_ready_T, _io_channel_ready_T_1) @[Uart.scala 34:40]
    io.channel.ready <= _io_channel_ready_T_2 @[Uart.scala 34:20]
    node _io_txd_T = bits(shiftReg, 0, 0) @[Uart.scala 35:21]
    io.txd <= _io_txd_T @[Uart.scala 35:10]
    node _T = eq(cntReg, UInt<1>("h0")) @[Uart.scala 37:15]
    when _T : @[Uart.scala 37:24]
      cntReg <= UInt<10>("h363") @[Uart.scala 39:12]
      node _T_1 = neq(bitsReg, UInt<1>("h0")) @[Uart.scala 40:18]
      when _T_1 : @[Uart.scala 40:27]
        node shift = shr(shiftReg, 1) @[Uart.scala 41:28]
        node _shiftReg_T = bits(shift, 9, 0) @[Uart.scala 42:33]
        node _shiftReg_T_1 = cat(UInt<1>("h1"), _shiftReg_T) @[Cat.scala 33:92]
        shiftReg <= _shiftReg_T_1 @[Uart.scala 42:16]
        node _bitsReg_T = sub(bitsReg, UInt<1>("h1")) @[Uart.scala 43:26]
        node _bitsReg_T_1 = tail(_bitsReg_T, 1) @[Uart.scala 43:26]
        bitsReg <= _bitsReg_T_1 @[Uart.scala 43:15]
      else :
        when io.channel.valid : @[Uart.scala 45:30]
          node _shiftReg_T_2 = cat(UInt<2>("h3"), io.channel.bits) @[Cat.scala 33:92]
          node _shiftReg_T_3 = cat(_shiftReg_T_2, UInt<1>("h0")) @[Cat.scala 33:92]
          shiftReg <= _shiftReg_T_3 @[Uart.scala 46:18]
          bitsReg <= UInt<4>("hb") @[Uart.scala 47:17]
        else :
          shiftReg <= UInt<11>("h7ff") @[Uart.scala 49:18]
    else :
      node _cntReg_T = sub(cntReg, UInt<1>("h1")) @[Uart.scala 54:22]
      node _cntReg_T_1 = tail(_cntReg_T, 1) @[Uart.scala 54:22]
      cntReg <= _cntReg_T_1 @[Uart.scala 54:12]


  module Buffer :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}}

    reg stateReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Uart.scala 117:25]
    reg dataReg : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[Uart.scala 118:24]
    node _io_in_ready_T = eq(stateReg, UInt<1>("h0")) @[Uart.scala 120:27]
    io.in.ready <= _io_in_ready_T @[Uart.scala 120:15]
    node _io_out_valid_T = eq(stateReg, UInt<1>("h1")) @[Uart.scala 121:28]
    io.out.valid <= _io_out_valid_T @[Uart.scala 121:16]
    node _T = eq(stateReg, UInt<1>("h0")) @[Uart.scala 123:17]
    when _T : @[Uart.scala 123:28]
      when io.in.valid : @[Uart.scala 124:23]
        dataReg <= io.in.bits @[Uart.scala 125:15]
        stateReg <= UInt<1>("h1") @[Uart.scala 126:16]
    else :
      when io.out.ready : @[Uart.scala 129:24]
        stateReg <= UInt<1>("h0") @[Uart.scala 130:16]
    io.out.bits <= dataReg @[Uart.scala 133:15]

  module BufferedTx :
    input clock : Clock
    input reset : Reset
    output io : { txd : UInt<1>, flip channel : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}}

    inst tx of Tx @[Uart.scala 144:18]
    tx.clock <= clock
    tx.reset <= reset
    inst buf of Buffer @[Uart.scala 145:19]
    buf.clock <= clock
    buf.reset <= reset
    buf.io.in <= io.channel @[Uart.scala 147:13]
    tx.io.channel <= buf.io.out @[Uart.scala 148:17]
    io.txd <= tx.io.txd @[Uart.scala 149:10]

  module Rx :
    input clock : Clock
    input reset : Reset
    output io : { flip rxd : UInt<1>, channel : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}}

    reg rxReg_REG : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Uart.scala 76:30]
    rxReg_REG <= io.rxd @[Uart.scala 76:30]
    reg rxReg : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[Uart.scala 76:22]
    rxReg <= rxReg_REG @[Uart.scala 76:22]
    node _falling_T = eq(rxReg, UInt<1>("h0")) @[Uart.scala 77:17]
    reg falling_REG : UInt, clock with :
      reset => (UInt<1>("h0"), falling_REG) @[Uart.scala 77:35]
    falling_REG <= rxReg @[Uart.scala 77:35]
    node _falling_T_1 = eq(falling_REG, UInt<1>("h1")) @[Uart.scala 77:43]
    node falling = and(_falling_T, _falling_T_1) @[Uart.scala 77:24]
    reg shiftReg : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[Uart.scala 79:25]
    reg cntReg : UInt<20>, clock with :
      reset => (reset, UInt<20>("h363")) @[Uart.scala 80:23]
    reg bitsReg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Uart.scala 81:24]
    reg valReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Uart.scala 82:23]
    node _T = neq(cntReg, UInt<1>("h0")) @[Uart.scala 84:15]
    when _T : @[Uart.scala 84:24]
      node _cntReg_T = sub(cntReg, UInt<1>("h1")) @[Uart.scala 85:22]
      node _cntReg_T_1 = tail(_cntReg_T, 1) @[Uart.scala 85:22]
      cntReg <= _cntReg_T_1 @[Uart.scala 85:12]
    else :
      node _T_1 = neq(bitsReg, UInt<1>("h0")) @[Uart.scala 86:22]
      when _T_1 : @[Uart.scala 86:31]
        cntReg <= UInt<10>("h363") @[Uart.scala 87:12]
        node _shiftReg_T = shr(shiftReg, 1) @[Uart.scala 88:37]
        node _shiftReg_T_1 = cat(rxReg, _shiftReg_T) @[Cat.scala 33:92]
        shiftReg <= _shiftReg_T_1 @[Uart.scala 88:14]
        node _bitsReg_T = sub(bitsReg, UInt<1>("h1")) @[Uart.scala 89:24]
        node _bitsReg_T_1 = tail(_bitsReg_T, 1) @[Uart.scala 89:24]
        bitsReg <= _bitsReg_T_1 @[Uart.scala 89:13]
        node _T_2 = eq(bitsReg, UInt<1>("h1")) @[Uart.scala 91:18]
        when _T_2 : @[Uart.scala 91:27]
          valReg <= UInt<1>("h1") @[Uart.scala 92:14]
      else :
        when falling : @[Uart.scala 94:23]
          cntReg <= UInt<11>("h514") @[Uart.scala 95:12]
          bitsReg <= UInt<4>("h8") @[Uart.scala 96:13]
    node _T_3 = and(valReg, io.channel.ready) @[Uart.scala 99:15]
    when _T_3 : @[Uart.scala 99:36]
      valReg <= UInt<1>("h0") @[Uart.scala 100:12]
    io.channel.bits <= shiftReg @[Uart.scala 103:19]
    io.channel.valid <= valReg @[Uart.scala 104:20]

  module WildcatTop :
    input clock : Clock
    input reset : UInt<1>
    output io : { led : UInt<16>, tx : UInt<1>, flip rx : UInt<1>}

    inst cpu of ThreeCats @[WildcatTop.scala 27:19]
    cpu.clock <= clock
    cpu.reset <= reset
    inst dmem of ScratchPadMem @[WildcatTop.scala 30:20]
    dmem.clock <= clock
    dmem.reset <= reset
    dmem.io <= cpu.io.dmem @[WildcatTop.scala 31:15]
    inst imem of InstructionROM @[WildcatTop.scala 32:20]
    imem.clock <= clock
    imem.reset <= reset
    imem.io.address <= cpu.io.imem.address @[WildcatTop.scala 33:19]
    cpu.io.imem.data <= imem.io.data @[WildcatTop.scala 34:20]
    cpu.io.imem.stall <= imem.io.stall @[WildcatTop.scala 35:21]
    inst tx of BufferedTx @[WildcatTop.scala 49:18]
    tx.clock <= clock
    tx.reset <= reset
    inst rx of Rx @[WildcatTop.scala 50:18]
    rx.clock <= clock
    rx.reset <= reset
    io.tx <= tx.io.txd @[WildcatTop.scala 51:9]
    rx.io.rxd <= io.rx @[WildcatTop.scala 52:13]
    node _tx_io_channel_bits_T = bits(cpu.io.dmem.wrData, 7, 0) @[WildcatTop.scala 54:43]
    tx.io.channel.bits <= _tx_io_channel_bits_T @[WildcatTop.scala 54:22]
    tx.io.channel.valid <= UInt<1>("h0") @[WildcatTop.scala 55:23]
    rx.io.channel.ready <= UInt<1>("h0") @[WildcatTop.scala 56:23]
    node _uartStatusReg_T = cat(rx.io.channel.valid, tx.io.channel.ready) @[WildcatTop.scala 58:51]
    reg uartStatusReg : UInt, clock with :
      reset => (UInt<1>("h0"), uartStatusReg) @[WildcatTop.scala 58:30]
    uartStatusReg <= _uartStatusReg_T @[WildcatTop.scala 58:30]
    reg memAddressReg : UInt, clock with :
      reset => (UInt<1>("h0"), memAddressReg) @[WildcatTop.scala 59:30]
    memAddressReg <= cpu.io.dmem.rdAddress @[WildcatTop.scala 59:30]
    node _T = bits(memAddressReg, 31, 28) @[WildcatTop.scala 60:22]
    node _T_1 = eq(_T, UInt<4>("hf")) @[WildcatTop.scala 60:31]
    node _T_2 = bits(memAddressReg, 19, 16) @[WildcatTop.scala 60:57]
    node _T_3 = eq(_T_2, UInt<1>("h0")) @[WildcatTop.scala 60:65]
    node _T_4 = and(_T_1, _T_3) @[WildcatTop.scala 60:41]
    when _T_4 : @[WildcatTop.scala 60:74]
      node _T_5 = bits(memAddressReg, 3, 0) @[WildcatTop.scala 61:24]
      node _T_6 = eq(_T_5, UInt<1>("h0")) @[WildcatTop.scala 61:31]
      when _T_6 : @[WildcatTop.scala 61:40]
        cpu.io.dmem.rdData <= uartStatusReg @[WildcatTop.scala 62:26]
      else :
        node _T_7 = bits(memAddressReg, 3, 0) @[WildcatTop.scala 63:30]
        node _T_8 = eq(_T_7, UInt<3>("h4")) @[WildcatTop.scala 63:37]
        when _T_8 : @[WildcatTop.scala 63:46]
          cpu.io.dmem.rdData <= rx.io.channel.bits @[WildcatTop.scala 64:26]
          rx.io.channel.ready <= cpu.io.dmem.rdEnable @[WildcatTop.scala 65:27]
    reg ledReg : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[WildcatTop.scala 69:23]
    node _T_9 = bits(cpu.io.dmem.wrAddress, 31, 28) @[WildcatTop.scala 70:31]
    node _T_10 = eq(_T_9, UInt<4>("hf")) @[WildcatTop.scala 70:40]
    node _T_11 = and(_T_10, cpu.io.dmem.wrEnable[0]) @[WildcatTop.scala 70:51]
    when _T_11 : @[WildcatTop.scala 70:79]
      node _T_12 = bits(cpu.io.dmem.wrAddress, 19, 16) @[WildcatTop.scala 71:32]
      node _T_13 = eq(_T_12, UInt<1>("h0")) @[WildcatTop.scala 71:40]
      node _T_14 = bits(cpu.io.dmem.wrAddress, 3, 0) @[WildcatTop.scala 71:72]
      node _T_15 = eq(_T_14, UInt<3>("h4")) @[WildcatTop.scala 71:79]
      node _T_16 = and(_T_13, _T_15) @[WildcatTop.scala 71:48]
      when _T_16 : @[WildcatTop.scala 71:88]
        node _T_17 = bits(cpu.io.dmem.wrData, 7, 0) @[WildcatTop.scala 72:44]
        node _T_18 = bits(cpu.io.dmem.wrData, 7, 0) @[WildcatTop.scala 72:70]
        node _T_19 = bits(reset, 0, 0) @[WildcatTop.scala 72:13]
        node _T_20 = eq(_T_19, UInt<1>("h0")) @[WildcatTop.scala 72:13]
        when _T_20 : @[WildcatTop.scala 72:13]
          printf(clock, UInt<1>("h1"), " %c %d\n", _T_17, _T_18) : printf @[WildcatTop.scala 72:13]
        tx.io.channel.valid <= UInt<1>("h1") @[WildcatTop.scala 73:27]
      else :
        node _T_21 = bits(cpu.io.dmem.wrAddress, 19, 16) @[WildcatTop.scala 74:39]
        node _T_22 = eq(_T_21, UInt<1>("h1")) @[WildcatTop.scala 74:47]
        when _T_22 : @[WildcatTop.scala 74:56]
          node _ledReg_T = bits(cpu.io.dmem.wrData, 7, 0) @[WildcatTop.scala 75:35]
          ledReg <= _ledReg_T @[WildcatTop.scala 75:14]
      wire _WIRE : UInt<1>[4] @[WildcatTop.scala 77:32]
      _WIRE[0] <= UInt<1>("h0") @[WildcatTop.scala 77:32]
      _WIRE[1] <= UInt<1>("h0") @[WildcatTop.scala 77:32]
      _WIRE[2] <= UInt<1>("h0") @[WildcatTop.scala 77:32]
      _WIRE[3] <= UInt<1>("h0") @[WildcatTop.scala 77:32]
      dmem.io.wrEnable[0] <= _WIRE[0] @[WildcatTop.scala 77:22]
      dmem.io.wrEnable[1] <= _WIRE[1] @[WildcatTop.scala 77:22]
      dmem.io.wrEnable[2] <= _WIRE[2] @[WildcatTop.scala 77:22]
      dmem.io.wrEnable[3] <= _WIRE[3] @[WildcatTop.scala 77:22]
    node _io_led_T = cat(UInt<1>("h1"), UInt<7>("h0")) @[WildcatTop.scala 80:17]
    reg io_led_REG : UInt, clock with :
      reset => (UInt<1>("h0"), io_led_REG) @[WildcatTop.scala 80:39]
    io_led_REG <= ledReg @[WildcatTop.scala 80:39]
    node _io_led_T_1 = cat(_io_led_T, io_led_REG) @[WildcatTop.scala 80:29]
    io.led <= _io_led_T_1 @[WildcatTop.scala 80:10]

